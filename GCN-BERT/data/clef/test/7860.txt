TECHNICAL FIELD This invention relates generally to the field of data systems and more specifically to annotating medical data represented by characteristic functions. BACKGROUND Sensors may be used in different situations (such as medical, environment, and other situations) to take measurements over time. In certain cases, the measurements may yield a relatively large volume of data, which may be difficult to analyze. Techniques may be used to process (such as store, utilize, and/or analyze) large volumes of data. SUMMARY OF THE DISCLOSURE In accordance with the present invention, disadvantages and problems associated with previous techniques for processing data may be reduced or eliminated. According to certain embodiments, a set of samples of sensor data is accessed. The set of samples records medical measurements taken by one or more medical sensors. A characteristic function is generated from the set of samples. The characteristic function indicates whether a given sample is a member of the set of samples. One or more samples of the set of samples that are associated with a given medical annotation are identified according to the characteristic function. Certain embodiments of the invention may provide one or more technical advantages. A technical advantage of one embodiment may be that sensor data may be represented by a characteristic function that can be stored as a binary decision diagram. Another technical advantage of one embodiment may be that a search query may be represented by a query function. The search query and the characteristic function may be used to obtain sensor values of the sensor data that satisfy the search query. Another technical advantage of one embodiment may be that model sensor data for a particular annotation may be represented by a particular annotated model characteristic function. The annotated model characteristic function may be combined with a characteristic function to annotate the characteristic function with the annotation. Another technical advantage of one embodiment may be that Boolean functions may be transformed to arithmetic functions. Hash codes may be calculated from the arithmetic functions. If the hash codes are equal, then the Boolean functions may be designated as equivalent. Certain embodiments of the invention may include none, some, or all of the above technical advantages. One or more other technical advantages may be readily apparent to one skilled in the art from the figures, descriptions, and claims included herein. BRIEF DESCRIPTION OF THE DRAWINGS For a more complete understanding of the present invention and its features and advantages, reference is now made to the following description, taken in conjunction with the accompanying drawings, in which: FIG. 1 illustrates an example of system that may be used to process sensor data; FIG. 2 illustrates an example of a method for representing sensor data by characteristic functions; FIG. 3 illustrates an example of a method for querying sensor data represented by characteristic functions; FIG. 4 illustrates an example of a method for annotating characteristic functions; and FIG. 5 illustrates an example of a method for determining whether characteristic functions are equivalent. DETAILED DESCRIPTION OF THE DRAWINGS Embodiments of the present invention and its advantages are best understood by referring to FIGS. 1 through 5 of the drawings, like numerals being used for like and corresponding parts of the various drawings. FIG. 1 illustrates an example of system 10 that may be used to process sensor data. In certain embodiments, system 10 may represent sensor data by a characteristic function that can be stored as a binary decision diagram. In certain embodiments, system 10 may represent a search query by a query function. The search query and the characteristic function may be used to obtain sensor values of the sensor data that satisfy the search query. In certain embodiments, system 10 may represent model sensor data for a particular annotation by a particular annotated model characteristic function. The annotated model characteristic function may be combined with a characteristic function to annotate the characteristic function with the annotation. In certain embodiments, system 10 may transform Boolean functions (such as characteristic functions) to arithmetic functions. Hash codes may be calculated from the arithmetic functions. If the hash codes are equal, then the Boolean functions may be designated as equivalent. In the illustrated embodiment, system 10 includes an interface (IF) 20, a computing system 22, a memory 24, and a sensor system 28 coupled as shown. Computing system 22 includes one or more processors 29. Logic 26 includes a binary decision diagram (BDD) generator 30, a query engine 32, a model engine 34, and a signature engine 36, and may be stored by computing system 22 and/or memory 24. Memory 24 stores sensor data 40 and a BDD library 41. Sensor system 28 includes one or more sensors 50. In certain embodiments, sensors 50 of sensor system 28 measure features (such as medical or environmental features) to yield measurements (such as medical or environmental measurements), which are sent to computing system 22. A measurement is typically expressed as a numerical value. Examples of sensors 50 may include medical, environmental, and/or other suitable sensors. Medical sensors may be used to measure one or more features of a patient's medical state. Medical sensors may include medical monitors, medical laboratory equipment, therapeutic equipment, medical imaging machines, and/or other medical sensor. Examples of medical sensors include electrocardiogram (ECG) sensors, blood pressure sensors, and/or pulse oximetry sensors. An electrocardiogram sensor records electrical activity of the heart over time through skin electrodes. An electrocardiogram sensor may output tracings of heartbeats. A tracing of a normal heartbeat typically includes a P-wave, a QRX complex (that includes an R-wave), and a T-wave. Samples may record any suitable features of the tracings. For example, samples may record intervals between features of consecutive heartbeats, such as the interval between two consecutive R-waves. The interval may be used to extract information about heart rate and its variability. A blood pressure sensor may use a sphygmomanometer to measure blood pressure. The measurement may include systolic and/or diastolic values in units of millimeters of mercury (mmHg). In certain instances, blood pressure may be measured at regular intervals throughout the day and night. A pulse oximetry sensor may be used to measure the oxygenation of hemoglobin. A pulse oximeter may be placed on the skin (such as a fingertip) and transmit a red and an infrared wave. The absorption of the waves may be measured to determine oxygen saturation. The pulse oximeter may output the oxygen saturation as, a percentage from zero percent to ninety-nine percent. Environmental sensors may measure an environmental feature, for example, such as geographic location, air pressure, elevation, and/or temperature. Examples of environmental sensors include a Global Positioning System (GPS) that determines location, a barometer that measures air pressure, an altimeter that measures elevation, and a thermometer that measures temperature. Sensor data 40 may include any suitable information. In certain embodiments, sensor data 40 records measurements taken by one or more sensors 50. Sensor data 40 may include samples that may have any suitable format. In certain embodiments, the format of the samples may be a tuple (or ordered set) that has one or more data parameters, and a particular sample may be a tuple of one or more values for the one or more data parameters. For example, a tuple format (t, p) may have data parameters time t and pressure p, and a particular sample (t0, p0) may have values pressure p0 measured at time t0. The tuple format may include any suitable data parameters, such as one or more sensor parameters and/or one or more test parameters. A sensor parameter may correspond to one or more sensors 50, and a sensor value may record one or more measurements taken by one or more sensors 50. For example, a sensor value may record a measurement taken by a sensor 50. A test parameter may correspond to a factor that describes a temporal, spatial, and/or environmental feature of the measurement process, and a test value may record the value of the feature when the measurements are taken. For example, the parameter may be time, and the parameter value may record a particular time at which measurements are taken. Examples of temporal features include time, which may be expressed as an absolute time (for example, 2:00 PM, May 25, 2010) or as relative time (for example, time elapsed from a starting time or time remaining until an ending time). Examples of spatial features include location, such as geographical location (which may include longitude, latitude, and/or altitude), location on a body (for example, a human body), and type of location (for example, rural or urban). Examples of environmental features describe physical characteristics of an environment, such as temperature (for example, atmospheric temperature or body temperature). Model sensor data 40 describes sensor data that may be used to annotate sensor data obtained from measurements in order to categorize the data. For example, certain model sensor data may be categorized and annotated with a “normal” (or similar) annotation, while other sensor data may be categorized and annotated with an “abnormal” (or similar) annotation. Sensor data obtained from measurements that match the normal model sensor data may be categorized as normal, while measured sensor data that match abnormal model sensor data may be categorized as abnormal. Any suitable annotation may be used. In certain embodiments, medical annotations that may be used to categorize medical sensor data. Examples of medical annotations may include a “normal” annotation for normal sensor data and an “abnormal” annotation for abnormal sensor data. Other examples of medical annotations may include annotations for particular diseases, conditions, symptoms, severity, and/or other category of medical sensor data. In certain embodiments, environmental annotations that may be used to categorize environmental sensor data. Examples of environmental annotations may include a “normal” annotation for normal sensor data and an “abnormal” annotation for abnormal sensor data. Other examples of environmental annotations may include annotations for particular weather conditions, geographical features, social conditions, and/or other category of environmental sensor data. Model sensor data includes model samples. A model sample comprises a tuple of one or more model sensor values. A model sensor value represents one or more measurements that could have been taken by one or more sensors. The model samples may be annotated with the annotation to indicate the category to which it belongs. Binary decision diagram library 41 stores binary decision diagrams. In certain embodiments, a binary decision diagram (BDD) is a rooted directed acyclic graph (DAG) that may be used to represent a Boolean function f. A BDD includes nodes, such as non-terminal (or decision) nodes and terminal nodes, where terminal nodes include root nodes. A non-terminal node corresponds to a sub-function f and is labeled by a Boolean variable v=xi. A non-terminal node has an outgoing 1-edge and an outgoing 0-edge pointing to child nodes. A 1-edge points to the sub-BDD that represents function v·f, and a 0-edge 88 points to the sub-BDD that represents function v·ƒ. In other words, a 1-edge represents an assignment of v to 1, and a 0-edge represents an assignment of v to 0. Terminal nodes include a 0-terminal and a 1-terminal that represent Boolean functions 0 and 1, respectively. A path from the root node to the 1-terminal represents a set of variable assignments setting the represented Boolean function to 1. A path from the root node to the 0-terminal represents a set of variable assignments setting the represented Boolean function to 0. In certain embodiments, a BDD is stripped of redundant decision nodes and subgraph isomorphisms. In certain embodiments, an ordered binary decision diagram (OBDD) is a BDD where all paths from the root node to the terminal nodes examine variables in the same order. OBDDs may allow for canonical representations. Other examples of BDDs include reduced ordered BDDs (ROBDDs), partitioned ordered binary decision diagrams (POBDDs), zero-suppressed decision diagrams (ZDDs), nano binary decision diagrams (nanoDDs), zero-suppressed nano binary decision diagrams (nanoZDDs), other suitable binary decision diagrams, and/or a combination of any of the preceding. In a ROBDD, isomorphic subgraphs are not present, and the order of the variables from the root node of the BDD to a terminal node are the same for all paths. In a ZDD, a node is excluded if the node is a negative literal. In other RBDDs, a node is excluded if both edges of the node point to the same node. Examples of the other types of BDDs are described in more detail below. In certain embodiments, node structure of BDD library 41 includes any suitable information, such as information about each binary variable and indices to the nodes that correspond to the two possible evaluations of the variable. BDD library 41 may also include information about complementation of one of the indices. In certain embodiments, BDD library 41 may store the information compactly. In certain embodiments, BDD library 41 may maintain the indices and variable identifiers as a function of the size of the BDD. For example, a BDD may have at most k nodes throughout some or all manipulations performed by BDD library 41. Each vertex of the BDD may be labeled with one of at most v variable identifiers. The indices to nodes therefore require at most ┌log(v)┐ bits to index any variable. The node therefore requires only 2·┌log(k)┐+┌log(v)┐ bits. In addition, two bits may be reserved, one bit used to identify complemented edges and another bit used as a general mark bit used during garbage collection. Values for v and k may be determined in any suitable manner. As an example, a user may specify v and a default k value may be used initially. When the address space allowed by the default k value is exhausted, the k value may be increased and the node table may be rebuilt. As another example, maximum values for v and k may be assumed. In certain embodiments, BDD generator 30 accesses a set of samples of sensor data that records measurements taken by one or more sensors. BDD generator 30 represents each sample as a minterm to yield a set of minterms. BDD generator 30 generates a characteristic function from the minterms, the characteristic function indicating whether a given minterm is a member of the set of minterms. In certain embodiments, a characteristic function fS of a set S indicates whether a given natural (represented by a minterm) is a member of a set S. In certain embodiments, characteristic function fS( x) of a set S⊂IN may be the Boolean function such that fS( x)=1 iff x is the binary representation of an element of S. For example, for S={1,3}, f(0,0)=f(1,0)=0 and f(0,1)=f(1,1)=1. A minterm is a logical expression of n variables that employs only the complement operator and the conjunction operator. For a Boolean function of n variables, a minterm is a product term in which each of the n variables appears once, either in a complemented or uncomplemented form. In certain embodiments, query engine 32 receives a search query for a search of a set of samples of sensor data. The search query indicates one or more requested values of one or more parameters. The samples are represented by a characteristic function indicating whether a given binary representation represents a sample of the set of samples. Query engine 32 formulates a query function representing the requested values. Query engine 32 uses the query function and the characteristic function to identify one or more samples that have the one or more requested values. In certain embodiments, model engine 34 accesses one or more sets of model samples of model sensor data. Each set comprises model samples for a corresponding annotation of one or more annotations. Model engine 34 performs the following for each set to yield one or more annotated model characteristic functions: represent each model sample of the each set as a model minterm to yield a set of model minterms; generate a model characteristic function from the model minterms, the characteristic function indicating whether a given minterm is a member of the set of model minterms; and annotate the model characteristic function. Model engine 34 generates a general model characteristic function from the annotated model characteristic functions. In certain embodiments, signature engine 34 receives a first Boolean function and a second Boolean function, such as first and second characteristic functions. Signature engine 34 transforms the first and second Boolean functions to yield first and second arithmetic functions, respectively. Signature engine 34 provides the same input to the first and second arithmetic functions to calculate first and second hash codes (or “signatures”), respectively. If the first hash code equals the second hash code, signature engine 34 designates the first and second Boolean functions as equivalent. Otherwise, signature engine 34 designates that the first and second Boolean functions as not equivalent. In certain embodiments, interface 20 receives input from, for example, a user, using any suitable input device and communicates the input to computing system 22. Interface 20 receives output from computing system 22 and communicates the output to computing system 22 using any suitable output device. FIG. 2 illustrates an example of a method for representing sensor data by characteristic functions. The method may be performed by BDD generator 30. In the method, sensor data 40 is accessed at step 110. Sensor data 40 records measurements taken by sensors 50. For example, sensor data 40 may record measurements taken by a first sensor 50 with a frequency of 1 Hertz and a second sensor 50 with a frequency of 60 Hertz. A set S of samples is generated from sensor data 40 at step 114. In certain embodiments, each sample comprises a tuple of one or more sensor values. Each sensor value records one or more measurements taken by one or more sensors at a test value of a test parameter. The test parameter may represent time, temperature, or location. The sample tuple may also include the test value. Set S may be generated in any suitable manner. In certain embodiments, time may be quantized according to the sampling frequencies of sensors 50 and/or desired accuracy. For each time ti, set S of sensor values is obtained to yield S={(ti, qi1, . . . , qik)}, where qij is the quantized input from sensor j at time instance i. Each sample is represented as a minterm at step 118. The sample may be represented as a minterm in any suitable manner. In certain embodiments, one or more variables are allocated to each data value (for example, a test or sensor value) of a sample. For example, Nt (for example, Nt=32) variables may be allocated for time, Ns1 (for example, Ns1=8) variables for the first sensor, and Ns2 (for example, Ns2=8) variables for the second sensor. In the example, the sample corresponds to a minterm of the form t1 . . . tNt·s11 . . . sNs11 . . . s12 . . . sNs22, for example, t1t2 . . . t32·s11 . . . s81 . . . s12 . . . s82. Each sensor value is expressed as a binary number using the allocated variables. In the example, a subset of S may be {(1,70,3), (2,70,3), (3,70,4)}. The related minterms are: 00000000000000000000000000000001·01000110·00000011, 00000000000000000000000000000010·01000110·00000011, 00000000000000000000000000000011·01000110·00000100. Characteristic function fS is generated from the minterms at step 122. Characteristic function fS indicates whether a given minterm is a member of the set of minterms. Characteristic function fS may be generated from the minterms in any suitable manner. In certain embodiments, a logical operation may be applied to the minterms to generate characteristic function fS. A logical operation may be one of or a logical combination of any two or more of the following: AND, OR, XOR, and NOT. In certain embodiments, a logical OR operation may be applied to the minterms to generate characteristic function fS. Applying a logical OR operation to a number of operands yields the logical OR of the operands. The corresponding characteristic function fS({right arrow over (x)}; {right arrow over (s)}1, {right arrow over (s)}2) is the logical OR of all minterms. There may be next samples of sensor data 40 at step 126. For example, there may be newer, or more recent, samples in sensor data 40. If there are next samples, the method returns to step 114 to generate a next set S of the next samples. If there are no next samples, the method proceeds to step 130. Characteristic function fS is updated using the next samples at step 130. Characteristic function fS may be updated in any suitable manner. In certain embodiments, steps similar to steps 114 through 122 may be performed. In the embodiments, a set of next samples may be generated. Each next sample may be represented as a next minterm. Characteristic function fS may be updated using the next minterms. For example, a logical operation (such as a logical OR operation) may be applied to characteristic function fS and the next minterms to yield an updated characteristic function fS. Characteristic function fS is reported at step 134. Characteristic function fS may be reported in any suitable manner. For example, BDD generator 30 may facilitate display of characteristic function fS at interface 20. FIG. 3 illustrates an example of a method for querying sensor data represented by characteristic functions. The method may be performed by BDD generator 30. In the method, a search query is received at step 210. The search query requests a search of a set of samples of sensor data 40 and may have any suitable format. In certain embodiments, the search query may indicate one or more requested values of one or more data parameters, and may request retrieval of samples that satisfy the requested values. A data parameter may be a sensor parameter that corresponds to a sensor and/or a test parameter that describes, for example, a spatial, temporal, and/or geographical feature. The samples of sensor data 40 may be represented by a characteristic function indicating whether a given binary representation represents a sample of the set of samples. Query function fR representing the requested values is formulated at step 214. Query function fR may be used to identify samples (represented by a characteristic function) that have the requested values. Query function fR may be formulated in any suitable manner. In certain embodiments, each requested value may be expressed as a requested minterm, and a range query function fR may be formulated from the requested minterms. For example, if the requested values are t=128 through 255, then query function ƒR({right arrow over (t)}; {right arrow over (s)}1; . . . ; {right arrow over (s)}N)= t31t30. . . t8t7. As an another example, the following method may be used to generate a BDD of a Boolean function THvalue(x) that yields 1 when the number that is represented in the vector of binary variables x is larger than or equal to value. For example, THvalue(X) may be the following: TH5(0, 0, 0)=0 TH5(0, 0, 1)=0 TH5(0, 1, 0)=0 TH5(0, 1, 1)=0 TH5(1, 0, 0)=0 TH5(1, 0, 1)=1 TH5(1, 1, 0)=1 TH5(1, 1, 1)=1 According to the method, a BDD of a Boolean function THvalue(x) may be generated by: BDD threshold(value, bits) { result = 1 while(bits>0) { bits = bits − 1 if(value mod 2 = 1) result = result AND varbits else if(result <> 1) result = result OR varbits value = value / 2 } return result } The generated BDD may be used to count the number of instances where the number that is represented in the vector of binary variables x is larger than or equal to value. As another example, if samples where sensor j has values between A and B are requested, the following query function may be used: ƒR({right arrow over (t)}; {right arrow over (s)}1; . . . {right arrow over (s)}N)=TH{A}({right arrow over (s)}j) AND TH{B+1}({right arrow over (s)}j). As another example, if the requested values are all sensor values, the query function may be blank. The query function and the characteristic function are used at step 218 to yield search results. The query function and the characteristic function may be used in any suitable manner. In certain embodiments, the query function and the characteristic function may be logically combined by applying a logical operation (such as a logical AND operation) to the functions. For example, characteristic function fS may be ANDed with query function ƒR({right arrow over (t)})= x1x233 . . . x24. Applying a logical AND operation to a number of operands may yield the logical AND of the operands. The search results may be one or more samples that have the requested values or may be the number of samples that have the requested values. In certain embodiments, the number of samples that have the requested values may be determined. The number may be determined in any suitable manner. For example, Boolean function THvalue(x) may yield 1 when the number that is represented in the vector of binary variables x is larger than or equal to value. The number of instances where a BDD representing THvalue(x) yields 1 may be counted to determine the number of instances where x is larger than or equal to value. The search results are reported at step 222. The search results may reported in any suitable manner. For example, the search results may be expressed as binary decision diagrams. FIG. 4 illustrates an example of a method for annotating characteristic functions. The method may be performed by model engine 34. In the method, model sensor data is accessed at step 310. In certain embodiments, one or more sets of model samples of model sensor data 40 may be accessed. Each set comprises model samples for a corresponding annotation of one or more annotations. Annotated model characteristic function fai is generated for an annotation ai at step 314. Annotated model characteristic function fai represents model samples annotated with one or more annotations. Annotated model characteristic function fai may be used to identify measured samples that belong to the category indicated by the annotation. Annotated model characteristic function fai may be generated in any suitable manner. In certain embodiments, each model sample of annotation ai may be represented as a model minterm, and model characteristic function fai may be generated from the model minterms by, for example, applying a logical operation (such as a logical OR operation) to the minterms. Model characteristic function fai indicates whether a given minterm is a member of the model minterms. In the embodiments, model characteristic function fai may be annotated to yield annotated model characteristic function fai. Model characteristic function fai may be annotated in any suitable manner. In certain embodiments, a Boolean variable is used to represent annotation ai. A mathematical operation (such as the product operation) may be applied to the Boolean variable and the model characteristic function yield the annotated model characteristic function. In an example scenario, time has a 32-bit resolution, and sensors have an 8-bit resolution. The kth sensor values [64,127] at time [0,31] may be annotated with the normal attribute as follows: [in-line-formulae]ƒanormal({right arrow over (t)};s{right arrow over (1)}; . . . ;s{right arrow over (k)})= t31t30 . . . t6t5s7ks6k [/in-line-formulae] There may be a next annotation ai+1 at step 316. If there is a next annotation ai+1, the method returns to step 314 to generate a model characteristic function fai+1 for next annotation ai+s. If there is no next annotation ai+1, the method proceeds to step 318. General model characteristic function g is generated from annotated model characteristic functions fa at step 318. General model characteristic function g may represent some or all sensor data 40. General model characteristic function g may be used to annotate samples of a given characteristic function, which is described in more detail below. General model characteristic function g may be generated in any suitable manner. In certain embodiments, a logical operation (such as a logical OR operation) may be applied to annotated model characteristic functions fa to yield general model characteristic function g: [in-line-formulae]g({right arrow over (a)};{right arrow over (t)};s{right arrow over (1)}; . . . ;s{right arrow over (k)})=Viƒai [/in-line-formulae] Characteristic function fS representing samples of sensor data 40 is received at step 322. The samples are annotated using the general model characteristic function g at step 326. The samples may be annotated in any suitable manner. In certain embodiments, a mathematical operation (such as a product operation) may be applied to the characteristic function and the general model characteristic function to annotate the samples: [in-line-formulae]ƒQ=ƒS·g [/in-line-formulae] Annotated characteristic function fQ represents samples of characteristic function g annotated with annotations. Core operations may be performed on annotated characteristic function fQ. In certain embodiments, annotated characteristic function fQ may be queried to identify samples that have a particular annotation. For example, a density query can provide information on the percentage of data points annotated as with a particular annotation. As another example, the time range of data points with a particular annotation can be computed. The query may be performed in any suitable manner, such as a manner substantially similar to that described herein. For example, a query function representing a given annotation may be formulated. The query function and the annotated characteristic function may then be combined to identify the samples. The results are reported at step 330. The results may be reported in any suitable manner. For example, the results may be reported through interface 20. FIG. 5 illustrates an example of a method for determining whether Boolean functions (such as characteristic functions) are equivalent. The method may be performed by signature engine 36. Signature engine 36 receives a first Boolean function and a second Boolean function at step 410. The first Boolean function and the second Boolean function are transformed to a first arithmetic function and a second arithmetic function, respectively, at step 414. The Boolean functions may be transformed in any suitable manner. For example, the transformations may be performed according to one or more of the following rules: X AND Y→X×Y X OR Y→X+Y−X×Y NOT(X)→1−X X AND X (idempotence)→X×X=X; Xk=X where → represents “is transformed to”, AND represents logical AND, OR represents logical OR, NOT represents logical negation, X AND X represents idempotence, × represents multiplication, + represents addition, and a superscript represents an exponent. For example, if Boolean function F=X OR Y, then the arithmetic function A[F]=X+Y−X×Y. In certain examples, if the finite integer field has a size p, the arithmetic is performed modulo p. In certain cases, a hash code H may be determined for a logical combination of Boolean functions B1 and B2. Hash code H may be determined from an arithmetic combination of hash codes H1 and H2, where H1 is the hash code of Boolean function B1 and H2 is the hash code of Boolean function B2. For example, the theorem of orthogonality may be applied. If Boolean functions B1 and B2 do not overlap in time, then hash code H for B1 V B2=H1+H2=H. The same input is provided to the first arithmetic function and the second arithmetic function to calculate a first hash code and a second hash code, respectively, at step 418. Any suitable input may be used. In certain embodiments, the input may be randomly generated integers. In the example, if input X=5, Y=7 is provided to arithmetic function A[F]=X+Y−X×Y, then hash code is A[F]=5+7−5×7=−23. The first and second hash codes are compared at step 422. The first and second hash codes may be equal or not equal at step 426. Hash codes of equivalent functions are the same, and hash codes of different functions are probably different. If arithmetic expressions are evaluated in a finite integer field under randomization, then any distinct pair of 22n Boolean functions almost always maps to distinct hash codes. The probability of error is n/(size-of-integer-field), where integer field Zp={0, 1, . . . , p−1} and p is prime. As prime p increases, the probability of error decreases and may be practically close to 0. Accordingly, a larger prime p may be selected to yield more accurate hash codes, and a smaller prime p may be selected to yield less accurate hash codes. In certain embodiments, hash codes may be repeatedly generated to improve accuracy. Error decreases exponentially after each run. After k runs, error e≦(n/p)k. If the first hash code equals the second hash code at step 426, the method proceeds to step 430, where signature engine 36 designates the first Boolean function and the second Boolean function as equivalent. If the first hash code does not equal the second hash code, the method proceeds to step 434, where signature engine 36 designates the first Boolean function and the second Boolean function as not equivalent. Results are reported at step 438. The results may be reported using interface 20. Examples of the method may be used in any suitable application. As an example, hash codes may be used to verify communication of Boolean functions or BDDs over a communication link (wired and/or wireless) to a network node (such as a base station). A sending node may send Boolean functions and hash codes of the Boolean functions to a receiving node after every K blocks of data of the Boolean functions. The hash codes may be encrypted. Multiple hash codes may be sent or the same hash code may be sent multiple times. The receiving node may calculate a hash code for a Boolean function and compare the calculated hash code with the hash code received with the Boolean function. If the hash codes are the same, the receiving node may determine that the Boolean function is valid, for example, has been properly received. Otherwise, the receiving node may determine that the Boolean function is not valid, for example, has not been properly received and may have been corrupted. As another example, hash codes may be used to mark and later validate data stored as Boolean functions or BDDs. A hash code may be calculated for a Boolean function and may be stored with or separately from the Boolean function. At a later time, the Boolean function may be validated using the stored hash function. A new hash code may be calculated for the Boolean function and compared with the stored hash code. If the hash codes are the same, the Boolean function may be regarded as valid, such as uncorrupted. Otherwise, the Boolean function may be regarded as invalid, such as corrupted. More accurate hash codes may be used to mark more important data, and less accurate hash codes may be used to mark less important data. Less accurate hash codes may be used if processing power is limited, such as for storage in mobile phones. Modifications, additions, or omissions may be made to the systems and apparatuses disclosed herein without departing from the scope of the invention. The components of the systems and apparatuses may be integrated or separated. Moreover, the operations of the systems and apparatuses may be performed by more, fewer, or other components. For example, the operations of BDD generator 30 and query engine 32 may be performed by one component, or the operations of BDD generator 30 may be performed by more than one component. Additionally, operations of the systems and apparatuses may be performed using any suitable logic comprising software, hardware, and/or other logic. As used in this document, “each” refers to each member of a set or each member of a subset of a set. Modifications, additions, or omissions may be made to the methods disclosed herein without departing from the scope of the invention. The methods may include more, fewer, or other steps. Additionally, steps may be performed in any suitable order. A component of the systems and apparatuses disclosed herein may include an interface, logic, memory, and/or other suitable element. An interface receives input, sends output, processes the input and/or output, and/or performs other suitable operation. An interface may comprise hardware and/or software. Logic performs the operations of the component, for example, executes instructions to generate output from input. Logic may include hardware, software, and/or other logic. Logic may be encoded in one or more tangible media and may perform operations when executed by a computer. Certain logic, such as a processor, may manage the operation of a component. Examples of a processor include one or more computers, one or more microprocessors, one or more applications, and/or other logic. In particular embodiments, the operations of the embodiments may be performed by one or more computer readable media encoded with a computer program, software, computer executable instructions, and/or instructions capable of being executed by a computer. In particular embodiments, the operations of the embodiments may be performed by one or more computer readable media storing, embodied with, and/or encoded with a computer program and/or having a stored and/or an encoded computer program. A memory stores information. A memory may comprise one or more non-transitory, tangible, computer-readable, and/or computer-executable storage media. Examples of memory include computer memory (for example, Random Access Memory (RAM) or Read Only Memory (ROM)), mass storage media (for example, a hard disk), removable storage media (for example, a Compact Disk (CD) or a Digital Video Disk (DVD)), database and/or network storage (for example, a server), and/or other computer-readable medium. Components of the systems and apparatuses may be coupled by any suitable communication network. A communication network may comprise all or a portion of one or more of the following: a public switched telephone network (PSTN), a public or private data network, a local area network (LAN), a metropolitan area network (MAN), a wide area network (WAN), a local, regional, or global communication or computer network such as the Internet, a wireline or wireless network, an enterprise intranet, other suitable communication link, or any combination of any of the preceding. Although this disclosure has been described in terms of certain embodiments, alterations and permutations of the embodiments will be apparent to those skilled in the art. Accordingly, the above description of the embodiments does not constrain this disclosure. Other changes, substitutions, and alterations are possible without departing from the spirit and scope of this disclosure, as defined by the following claims. 1. A method for annotating large volumes of medical data represented by binary decision diagrams comprising, by one or more processors associated with one or more computer systems: accessing a plurality of set of samples of sensor data recording a plurality of medical measurements taken by one or more medical sensors, wherein each set of the one or more sets of samples corresponds to an annotation used to categorize the sensor data;representing each data value of the set of samples as a minterm to yield a set of minterms, each minterm within the set of minterms comprising a logical expression of one or more variables allocated to the data value of the sample;generating a characteristic function from the set of minterms, the characteristic function being represented by a reduced ordered binary decision diagram indicating whether a given minterm is a member of the set of minterms, the reduced ordered binary decision diagram being stored compactly in a BDD library;receiving a search query for a search of a set of samples of sensor data wherein the query indicates one or more requested values of one or more sensor parameters, the search query being represented by a query function corresponding to the requested values;identifying one or more minterms of the set of minterms that are associated with a given medical annotation by combining the query function and the characteristic function through logical operations, the identified minterms counting the number of instances where the data value represented by the minterm of the set of minterms is equal to the one or more requested values; andreporting the results of said identifying as search results, through an interface. 2. The method of claim 1, the identifying the one or more minterms further comprising: receiving a model characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations; andidentifying the one or more minterms using the model characteristic function and the characteristic function. 3. The method of claim 1, the identifying the one or more minterms further comprising: annotating the characteristic function using a model characteristic function to yield an annotated characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations; andquerying the annotated characteristic function to identify the one or more minterms. 4. The method of claim 1, the identifying the one or more minterms further comprising: annotating the characteristic function using a model characteristic function to yield an annotated characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations, the annotated characteristic function representing the set of minterms annotated with the one or more medical annotations; andquerying the annotated characteristic function to identify the one or more minterms. 5. The method of claim 1, the identifying the one or more minterms further comprising: determining an annotated characteristic function for the characteristic function, the annotated characteristic function representing the set of minterms annotated with one or more medical annotations;formulating a query BDD representing the given medical annotation; andapplying a logical AND operation to the query BDD and the annotated characteristic function to identify the one or more minterms. 6. The method of claim 1, the one or more medical annotations comprising one or more of the following: a normal annotation or an abnormal annotation. 7. The method of claim 1, wherein the samples of sensor data comprise a set of numerical values recording the plurality of medical measurements, and wherein the method further comprises: allocating a variable to each numerical value within the set of numerical values to create a minterm for each numerical value;for each numerical value within the set of numerical values, converting each minterm to a binary number, andapplying a logic operation to a plurality of binary numbers representing the set of samples to generate the characteristic function. 8. The method of claim 1, further comprising: accessing a next set of samples of sensor data recording an additional plurality of medical measurements; andupdating the characteristic function based on the next set of samples. 9. The method of claim 1, wherein the reduced ordered binary decision diagram comprises one or more rooted directed acyclic graphs representing a Boolean function. 10. The method of claim 1, wherein the reduced ordered binary decision diagram comprises a plurality of nodes and a plurality of edges connecting the nodes thereby forming a plurality of paths, each path in the binary decision diagram representing a set of variable assignments setting a Boolean function represented by the binary decision diagram to either 1 or 0 . 11. An apparatus for annotating large volumes of medical data represented by binary decision diagrams comprising: one or more processors; and a memory coupled to the processors comprising instructions executable by the processors, the processors operable when executing the instructions to: access a plurality of set of samples of sensor data recording a plurality of medical measurements taken by one or more medical sensors, wherein each set of the one or more sets of samples corresponds to an annotation used to categorize the sensor data;represent each data value of the set of samples as a minterm to yield a set of minterms, each minterm within the set of minterms comprising a logical expression of one or more variables allocated to the data value of the sample;generate a characteristic function from the set of minterms, the characteristic function being represented by a reduced ordered binary decision diagram indicating whether a given minterm is a member of the set of minterms, the reduced ordered binary decision diagram being stored compactly in a BDD library;receive a search query for a search of a set of samples of sensor data wherein the query indicates one or more requested values of one or more sensor parameters, the search query being represented by a query function corresponding to the requested values;identify one or more minterms of the set of minterms that are associated with a given medical annotation by combining the query function and the characteristic function through logical operations, the identified minterms counting the number of instances where the data value represented by the minterm of the set of minterms is equal to the one or more requested values; andreport the results of said identifying as search results, through an interface. 12. The apparatus of claim 11, the identifying the one or more minterms further comprising: receiving a model characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations; andidentifying the one or more minterms using the model characteristic function and the characteristic function. 13. The apparatus of claim 11, the identifying the one or more minterms further comprising: annotating the characteristic function using a model characteristic function to yield an annotated characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations; andquerying the annotated characteristic function to identify the one or more minterms. 14. The apparatus of claim 11, the identifying the one or more minterms further comprising: annotating the characteristic function using a model characteristic function to yield an annotated characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations, the annotated characteristic function representing the set of minterms annotated with the one or more medical annotations; andquerying the annotated characteristic function to identify the one or more minterms. 15. The apparatus of claim 11, the identifying the one or more minterms further comprising: determining an annotated characteristic function for the characteristic function, the annotated characteristic function representing the set of minterms annotated with one or more medical annotations;formulating a query BDD representing the given medical annotation; andapplying a logical AND operation to the query BDD and the annotated characteristic function to identify the one or more minterms. 16. The apparatus of claim 11, the one or more medical annotations comprising one or more of the following: a normal annotation or an abnormal annotation. 17. One or more non-transitory computer-readable media storing code for annotating large volumes of medical data represented by binary decision diagrams, when executed by one or more processors, configured to: access a plurality of set of samples of sensor data recording a plurality of medical measurements taken by one or more medical sensors, wherein each set of the one or more sets of samples corresponds to an annotation used to categorize the sensor data;represent each data value of the set of samples as a minterm to yield a set of minterms, each minterm within the set of minterms comprising a logical expression of one or more variables allocated to the data value of the sample;generate a characteristic function from the set of minterms, the characteristic function being represented by a reduced ordered binary decision diagram indicating whether a given minterm is a member of the set of minterms, the reduced ordered binary decision diagram being stored compactly in a BDD library;receive a search query for a search of a set of samples of sensor data wherein the query indicates one or more requested values of one or more sensor parameters, the search query being represented by a query function corresponding to the requested values;identify one or more minterms of the set of minterms that are associated with a given medical annotation by combining the query function and the characteristic function through logical operations, the identified minterms counting the number of instances where the data value represented by the minterm of the set of minterms is equal to the one or more requested values; andreport the results of said identifying as search results, through an interface. 18. The media of claim 17, the identifying the one or more minterms further comprising: receiving a model characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations; andidentifying the one or more minterms using the model characteristic function and the characteristic function. 19. The media of claim 17, the identifying the one or more minterms further comprising: annotating the characteristic function using a model characteristic function to yield an annotated characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations; andquerying the annotated characteristic function to identify the one or more minterms. 20. The media of claim 17, the identifying the one or more minterms further comprising: annotating the characteristic function using a model characteristic function to yield an annotated characteristic function, the model characteristic function representing a set of model minterms annotated with one or more medical annotations, the annotated BDD representing the set of minterms annotated with the one or more medical annotations; andquerying the annotated characteristic function to identify the one or more minterms. 21. The media of claim 17, the identifying the one or more minterms further comprising: determining an annotated characteristic function for the characteristic function, the annotated characteristic function representing the set of minterms annotated with one or more medical annotations;formulating a query BDD representing the given medical annotation; andapplying a logical AND operation to the query BDD and the annotated characteristic function to identify the one or more minterms. 22. The media of claim 17, the one or more medical annotations comprising one or more of the following: a normal annotation or an abnormal annotation.