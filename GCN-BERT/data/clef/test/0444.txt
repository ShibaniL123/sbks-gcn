METHOD AND APPARATUS FOR CONTROLLING A HAPTIC DEVICE Inventors: Dennis Moses, Arthur Quaid, Hyosig Kang CROSS REFERENCE TO RELATED APPLICATIONS BACKGROUND OF THE INVENTION * Field of the Invention [0002] The invention relates to a surgical system and, more particularly, to method and apparatus for controlling a haptic device. Description of Related Art [0003) Minimally invasive surgery (MIS) is the performance of surgery through incisions that are considerably smaller than incisions used in traditional surgical approaches. For example, in an orthopedic application such as total knee replacement surgery, an MIS incision length may be in a range of about 4 to 6 inches whereas an incision length in traditional total knee surgery is typically in a range of about 6 to 12 inches. As a result of the smaller incision length, MIS procedures are generally less invasive than traditional surgical approaches, which minimizes trauma to soft tissue, reduces post-operative pain, promotes earlier mobilization, shortens hospital stays, and speeds rehabilitation. [0004] MIS presents several challenges for a surgeon. For example, in minimally invasive orthopedic joint replacement, the small incision size reduces the surgeon’s ability to view and access the anatomy, which increases the complexity of sculpting bone and assessing proper implant position. As a result, accurate placement of implants may be difficult. Conventional techniques for counteracting these problems include, for example, surgical navigation, positioning the leg for optimal joint exposure, and employing specially designed, downsized instrumentation and complex surgical techniques. Such techniques, however, typically require a large amount of specialized instrumentation, a lengthy training process, and a high degree of skill. Moreover, operative results for a single surgeon and among various surgeons are not sufficiently predictable, repeatable, and/or accurate. As a result, implant performance and longevity varies among patients. (0005] Conventional efforts to facilitate the performance and improve the outcome of minimally invasive and traditional orthopedic joint procedures may include Ore use of a robotic surgical system. For example, some conventional techniques include autonomous robotic systems, such as the ROBODOC system (formerly available from Integrated Surgical Systems, Inc., Sacramento, California). Such systems, however, typically serve primarily to enhance bone machining by performing autonomous cutting with a high speed burr. Although such systems enable precise bone resections for improved implant fit and placement, they act autonomously (rather than cooperatively with the surgeon) and thus require the surgeon to cede a degree of control to the robot. Additional drawbacks of autonomous systems include the large size of the robot, poor ergonomics, increased incision length for adequate robot access, and limited acceptance by surgeons and regulatory agencies due to the autonomous nature of the system. Such systems also typically require rigid clamping of the bone during registration and cutting and thus lack real-time adaptability to the dynamic intraoperative scene. (0006] Other conventional robotic systems include non-autonomous robots that cooperatively interact with the surgeon, such as the ACROBOT system (The Acrobot Company Limited, London, Great Britain). One drawback of conventional interactive robotic systems, however, is that such systems lack the ability to adapt surgical navigation in real-time to a dynamic intraoperative environment. For example, U.S. Patent No. 7,035,716, discloses an interactive robotic system programmed with a three-dimensional virtual region of constraint that is registered to a patient The robotic system includes a three degree of freedom (3 DOF) arm having a handle that incorporates force sensors. The surgeon utilizes the handle to manipulate the arm and move the cutting tool. Moving the arm via the handle is required so that the force sensors can measure the force being applied to the handle by the surgeon. The measured force is then used to control motors to assist or resist movement of the cutting tool. For example, during a knee replacement operation, the femur and tibia of the patient are fixed in position relative to the robotic system. As the surgeon applies force to the handle to move the cutting tool, the interactive robotic system applies an increasing degree of resistance to resist movement of the cutting tool as the tool approaches a boundary of the virtual region of constraint. In this manner, the robotic system guides the surgeon in preparing the bone by maintaining the tool within the virtual region of constraint. As with the above-described autonomous systems, however, the interactive robotic system functions primarily to enhance bone machining. Additionally, the 3 DOF configuration of the arm and the requirement that the surgeon manipulate the arm using the force handle results in limited flexibility and dexterity, making the robotic system unsuitable for certain MIS applications. The interactive robotic system also requires the anatomy to be rigidly restrained and the robotic system to be fixed in a gross position and thus lacks real-time adaptability to the intraoperative scene. (0007] Although some interactive robotic systems may not require fixation of the anatomy, such as the VECTORBOT system (BrainLAB, Inc., Westchester, Illinois), such systems do not enable bone sculpting but instead merely function as intelligent tool guides. For example, such systems may control a robotic arm to constrain movement of a drill along a pre-planned drilling trajectory to enable a surgeon to drill a hole in a vertebra for placement of a pedicle screw. Similarly, other robotic systems, such as the BRIGIT system (Zimmer, Inc., Warsaw, Indiana), simply position a mechanical tool guide. For example, the robotic system disclosed in International Pub. No. WO 2005/0122916, i' discloses a robotic arm that positions a mechanical tool guide. Using the robotpositioned tool guide, the surgeon manually manipulates a conventional surgical tool, such as a saw or drill, to make cuts to the patient’s anatomy while the robot constrains movement of the tool guide. Although such systems may increase the accuracy and repeatability of the bone cuts, they are limited to performing the functions of a conventional tool guide and thus lack the ability to enable the surgeon to sculpt complex shapes in bone, as may be required for minimally invasive modular implant designs. [0008] Some non-robotic conventional surgical tools useful for bone sculpting do not require fixation of the relevant anatomy, such as the Precision Freehand Sculptor (Blue Belt Technologies, Inc., Pittsburgh, Pennsylvania). One drawback of such tools, however, is that they do not function in a manner that is transparent to the user. For example, U.S. Patent No. 6,757,582, discloses a handheld surgical tool that can be used for sculpting a target shape into a bone. The handheld tool is a freehand cutting tool that is manipulated by the surgeon to grind away portions of the bone to form a desired target shape in the bone. The target shape is defined, for example, by a voxel-based model that is registered to the physical bone. During cutting, both the bone and the cutting tool are tracked to enable a controller to determine whether the cutting tool is impinging on the boundaries of the target shape and therefore cutting away bone drat should be left intact. If so, the controller may shut off or retract the cutting tool to protect the bone. Although the bone is protected, the operation of the surgical tool is interrupted during the surgical procedure and the length of time to perform the procedure may increase. Further, interruption of cutting may also result in a rough surface cut Additionally, such systems merely disable the cutting tool based on a position of the tool relative to the target shape but do not actually constrain the surgeon’s manipulation of the cutting tool, for example, to prevent contact between the cutting tool and sensitive anatomy, or address other adverse situations, such as when rapid motion of the anatomy is detected. Thus, such systems may not include adequate safeguards to protect the patient Moveover, a handheld tool that incorporates a shutoff mechanism may be bulky and heavier than a normal freehand tool or a gravity compensated interactive arm. Thus, it may be difficult for a surgeon to maneuver such a handheld tool to produce fine cutting motions, which makes such tools unsuited for applications that require complex shapes to be sculpted in bone, especially in a minimally invasive surgical environment such as when cutting in the gap between the femur and the tibia in a knee replacement operation without dislocating or distracting the joint (0009] In view of the foregoing, a need exists for a surgical system that is able to cooperatively interact with a surgeon to enable the surgeon to sculpt complex shapes in bone in a minimally invasive manner and that has the ability to dynamically compensate for motion of objects in the intraoperative environment in a manner that safeguards the patient and is substantially transparent to the surgeon. SUMMARY OF THE INVENTION (0010) According to an aspect of the present invention, a method for controlling a surgical device includes manipulating the surgical device to perform a procedure on a patient; determining whether a relationship between an anatomy of the patient and a position, an orientation, a velocity, and/or an acceleration of a surgical tool of the surgical device corresponds to a desired relationship between the anatomy and the position, the orientation, the velocity, and/or the acceleration of the surgical tool; and imposing a constraint on the surgical device if the relationship does not correspond to the desired relationship and/or a detection device is unable to detect a position of the anatomy and/or the position of the surgical tool. [0011] According to another aspect, a method for controlling a surgical device includes manipulating the surgical device to perform a procedure on a patient; constraining the manipulation of the surgical device based on a desired relationship between an anatomy of the patient and a position, an orientation, a velocity, and/or an acceleration of a surgical tool of the surgical device; and limiting movement of the surgical tool and/or operation of the surgical tool if the desired relationship is not maintained and/or a detection device is unable to detect the anatomy and/or the surgical tool. [0012] According to yet another aspect, a system for controlling a surgical device includes a surgical device configured to be manipulated by a user to perform a procedure on patient, a surgical tool coupled to the surgical device, and a computing system. The computing system is programmed to determine whether a relationship between an anatomy of the patient and a position, an orientation, a velocity, and/or an acceleration of the surgical tool corresponds to a desired relationship between the anatomy and the position, the orientation, the velocity, and/or the acceleration of the surgical tool; and impose a constraint on the surgical device if the relationship does not correspond to the desired relationship and/or a detection device is unable to detect a position of the anatomy and/or the position of the surgical tool. BRIEF DESCRIPTION OF THE DRAWINGS [0013] The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate embodiments of the invention and together with the description serve to explain principles of the invention. [0014] FIG. 1 is a perspective view of an embodiment of a surgical system according to the present invention. [0015] FIG. 2 A is a perspective view of an embodiment of a haptic device according to the present invention. [0016] FIG. 2Β is a perspective view of an embodiment of a haptic device according to the present invention. [0017] FIG. 2C is a perspective view of the haptic device of FIG. 2 A showing a user operating the haptic device. [0018] FIG. 3 A is a perspective view of an embodiment of an end effector according to the present invention. [0019] FIG. 3Β is a side perspective view of the end effector of FIG. 3Α. [0020] FIG. 4 is a perspective view of an embodiment of an anatomy tracker according to the present invention. [0021] FIG. 5 is a perspective view of an embodiment of a haptic device tracker according to the present invention. [0022] FIG. 6Α is a perspective view of an embodiment of an end effector tracker according to the present invention. [0023] FIG. 6Β is a perspective view of.the end effector tracker of FIG. 6Α attached to the end effector of FIG. 3Α. [0024] FIG. 7 is a perspective view of an embodiment of an instrument tracker according to the present invention. [0025] FIG. 8 is a perspective view of a femur and a tibia showing an embodiment of a graphical representation of a haptic object according to the present invention. [0026] FIG. 9 shows an embodiment of a display of a CAS system according to the present invention. [0027] FIG. 10 is a block diagram of an embodiment of a haptic rendering process according to the present invention. [0028] FIG. 11 is a representation of an embodiment of a 3D geometric haptic object according to the present invention. [0029] FIG. 12 is a block diagram of an embodiment of a haptic rendering process according to the present invention. [0030] FIG. 13 is a pictorial representation illustrating coordinate systems and transformations according to the present invention. [0031] FIG. 14 is a block diagram of an embodiment of an occlusion detection algorithm according to the present invention. DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS [0032] Presently preferred embodiments of the invention are illustrated in the drawings. An effort has been made to use the same or like reference numbers to refer to the same or like parts. [0033] FIG. 1 shows an embodiment of a surgical system 10. The surgical system 10 includes a computing system 20, a haptic device 30, and a tracking system 40. In one embodiment, the surgical system 10 is a robotic surgical system as disclosed in U.S. Patent Application Serial No. 11/357,197, Pub. No. US 2006/0142657, filed February 21,2006, ; r. In a preferred embodiment, the surgical system 10 is the HAPTIC GUIDANCE SYSTEM” available from ΜΑΚΟ SURGICAL CORP.® in Ft. Lauderdale, Florida. [0034] The computing system 20 includes hardware and software for operation and control of the surgical system 10 and may comprise a computer 21, a computer 31, a display device 23, an input device 25, and a cart 29. The computing system 20 is adapted to enable the surgical system 10 to perform various functions related to surgical planning, navigation, image guidance, and/or haptic guidance. The computer 21 is preferably customized for surgical planning and navigation and includes algorithms, programming, and software utilities related to general operation, data storage and retrieval, computer aided surgery (CAS), and/or any other suitable functionality. In contrast, the computer 31 is preferably customized for controlling performance, stability, and/or safety of the haptic device 30 and includes haptic control utilities and programs that enable the haptic device 30 to utilize data from the tracking system 40. [0035] Tim haptic device 30 is a surgical device configured to he manipulated by a user (such as a surgeon) to move a surgical tool 50 to perform a procedure on a patient, such as sculpting a surface of a bone to receive an implant During the procedure, the haptic device 30 provides haptic guidance to the surgeon, for example, to maintain the tool 50 within a predefined virtual boundary. As disclosed in the above-referenced Pub. No. US 2006/0142657, the virtual boundary may be defined by a virtual haptic object that is generated by the computing system 20 and registered to (associated with) the anatomy of the patient. The haptic object establishes a desired relationship between the anatomy and the tool 50, such as a desired position, orientation, velocity, and/or acceleration of the tool 50 relative to the anatomy. In operation, when the surgeon moves the tool 50 in a manner that violates the desired relationship (such as when the tool 50 contacts a virtual boundary), the haptic device 30 provides haptic guidance in the form of tactile feedback (e.g., vibration) and/or force feedback (e.g., force and/or torque) to the surgeon. The haptic guidance may be experienced by the surgeon, for example, as resistance to further tool movement in the direction of the virtual boundary. As a result, the surgeon may feel as if the tool 50 has encountered a physical object, such as a wall. In this manner, the virtual boundary functions as a virtual cutting guide. Thus, the surgical system 10 limits the surgeon’s ability to physically manipulate the haptic device 30 (e.g., by providing haptic guidance and/or a limit on user manipulation of the haptic device 30) by implementing control parameters based on a relationship between the anatomy and a position, an orientation, a velocity, and/or an acceleration of a portion of the haptic device 30, such as the tool 50. In addition to haptic objects, the relationship may be based on predefined parameters, such as a predefined depth that limits total travel of the tool 50. [0036] Guidance from the haptic device 30 coupled with computer aided surgery (CAS) enables a surgeon to actively and accurately control surgical actions, such as bone cutting, and delivery of localized therapies (e.g., in the brain). In orthopedic applications, the haptic device 30 can be applied to the problems of inaccuracy, unpredictability, and nonrepeatability in bone preparation by guiding the surgeon in proper sculpting of bone to thereby enable precise, repeatable bone resections while maintaining intimate involvement of the surgeon in the bone preparation process. Moreover, because the haptic device 30 guides the surgeon during cutting, the skill level of the surgeon is less critical. Thus, surgeons of varying skill degree and experience are able perform accurate, repeatable bone resections. [0037] The haptic device 30 may be robotic, non-robotic, or a combination of robotic and non-robotic systems. In one embodiment, the haptic device 30 is a robotic system as disclosed in the above-referenced Pub. No. US 2006/0142657. In a preferred embodiment, the haptic device is the HAPTIC GUIDANCE SYSTEM™ available from ΜΑΚΟ SURGICAL CORP.® in Ft. Lauderdale, Florida. As shown in FIG. 2Α, the haptic device 30 includes a base 32, an arm 33, an end effector 35, a user interface 37, and a platform 39. [0038] The base 32 provides a foundation for the haptic device 30. The base 32 supports the arm 33 and may also house other components, such as, for example, controllers, amplifiers, actuators, motors, transmission components, clutches, brakes, power supplies, sensors, computer hardware, and/or any other well-known robotic component. [0039] The arm 33 is disposed on the base 32 and is adapted to enable the haptic device 30 to be manipulated by the user. The arm 33 may be an articulated linkage such as serial device, a parallel device, or a hybrid device (i.e., a device having both serial and parallel elements). In a preferred embodiment, the arm 33 is a serial device having four or more degrees of freedom (axes of movement), such as, for example, a robotic arm known as the “Whole-Arm Manipulator” or WAM™ currently manufactured by Barrett Technology, Inc. The arm 33 includes a proximal end disposed on the base 32 and a distal end that includes the end effector 35 to which the surgical tool 50 is coupled. To manipulate the haptic device 30, a user 160 simply grasps and moves the arm 33 (as shown in FIG. 2C), which results in movement of the tool 50. In one embodiment, the arm 33 includes a first segment 33 a, a second segment 33b, and a third segment 33c as shown in FIG. 2Α. The first segment 33a and the second segment 33b are connected at a first joint 33d (e.g., a shoulder joint), and the second segment 33b and the third segment 33c are connected at a second joint 33℮ (e.g., an elbow joint). As shown in FIG. 2Β, the arm 33 has a first degree of freedom DOFi, a second degree of freedom DOF2, a third degree of freedom DOF3, and a fourth degree of freedom DOF4. Dexterity of the arm 33 may be enhanced by adding additional degrees of freedom. For example, the arm 33 may include a wrist 36 disposed on the third segment 33c as shown in FIG. 2Α. The wrist 36 includes one or more degrees of freedom, such as a degree of freedom DOFs, to augment the degrees of freedom DOFi, DOF2,DOF3, and DOF4. The wrist 36 may be, for example, a one or three degree of freedom WAM™ wrist manufactured by Barrett Technology, Inc. or a one degree of freedom direct drive wrist. [0040] To enable the haptic device 30 to provide haptic guidance to the user, the arm 33 incorporates a drive system, such as the drive system disclosed in the above-referenced Pub. No. US 2006/0142657. The drive system includes actuators (e.g., motors) and a mechanical transmission. In an exemplary embodiment, the drive system includes a high-speed cable transmission and zero backlash, low friction, cabled differentials. The cable transmission may be, for example, a cable transmission used in the WAM™ robotic arm currently manufactured by Barrett Technology, Inc. and/or a cable transmission as described in U.S. Patent No. 4,903,536. [0041] The arm 33 also includes position sensors (not shown) for determining a position and an orientation (i.e., pose) of the arm 33, such as encoders and/or resolvers mounted on the joints 33d and 33℮ and/or encoders and/or resolvers mounted on a shaft of each motor. [0042] The end effector 35 comprises a working end of the haptic device 30. As shown in FIG. 2Α, the end effector 35 includes a proximal portion connected to the arm 33 and a distal portion that includes the tool 50 and a tool holder 51. The tool 50 may be, for example, a surgical tool (such as a burr, drill, probe, saw, etc.). In one embodiment, the tool 50 and the tool holder 51 comprise an electric, air cooled surgical tool currently manufactured by ANSPACH® and having product numbers ΕΜΑΧ2 (motor), L-2SB (2mm fluted ball), L-4B (4 mm fluted ball), L-6B (6 mm fluted ball), and L-1R (12) (1.2 mm χ 12.8 mm fluted router). The surgical tool may also include additional components such as a user input device (e.g., a foot pedal such as ANSPACH® product number EMAX2-FP), a control console (e.g., ANSPACH® product number SC2000), and the like. Further, the tool 50 may be integrated into the surgical system 10 such that cutting information (e.g., velocity, torque, temperature, etc.) is available to the surgical system 10 and/or such that the surgical system 10 can control operation of the tool 50. [0043] In one embodiment, the tool holder 51 includes a holding device 151 configured to couple the surgical tool 50 to the haptic device 30. As shown in FIG. 3Β, the holding device 151 comprises a first member 151a and a second member 151b. The first member 151a is configured to receive at least a portion of the tool 50 (e.g., a shaft 50a of the tool 50) and to engage the second member 151b. The second member 151b is configured to couple the first member 151a and the surgical tool 50 to the end effector 35 of the haptic device 30, to maintain the tool 50 in a desired position when the tool 50 is coupled to the end effector 35, and to substantially prevent movement of the tool 50 relative to the end effector 35. As shown in FIGS. 3Α and 3Β, the first member 151a of the holding device 151 may be a sleeve or sheath sized to receive a shaft 50a of the tool 50 and to be inserted into the second member 151b. For example, in one embodiment, the first member 15 la has a diameter in a range of about 5.9 mm to about 6.1 mm at a first end (i.e., an end into which the shaft 50a is inserted) and a diameter of about 11.38 mm to about 11.48 mm at a second end (i.e., an end that is inserted into the second member 151b). The second member 151b of the holding device 151 may be any connector suitable for coupling a first object (e.g., a tool or work piece) to a second object (e.g., a machine or robot) in a manner that is secure, stable, and enables repeatable positioning of the first object relative to the second object. In one embodiment, the second member 151b includes a collet. In other embodiments, the second member 151b may include threads, clamping devices, set screws, and the like. [0044] In one embodiment, the holding device 151 is configured so that an axis of the holding device 151 corresponds to a desired axis of the tool 50 when the holding device 151 is disposed on the haptic device 30. For example, in one embodiment (shown in FIGS. 3Α and 3Β), the second member 151b of the holding device 151 includes a connector comprising a collet 151c, a collet knob 15 Id, and a collar nut 15 le. In this embodiment, the collet 151c includes a male morse taper feature, and the aperture 52 of the end effector 35 includes a corresponding female morse taper feature. The collet 15 lc is mated to the aperture 52 and tightened onto the end effector 35 with the collar nut 15le. This taper connection establishes an axis Η-Η that corresponds to the desired axis of the surgical tool 50. As shown in FIG. 3Β, when the tool 50 is coupled to the end effector 35 via the holding device 151, an axis of the tool 50 aligns with the axis Η-Η. In this manner, the holding device 151 aligns the tool 50 in a desired configuration relative to the end effector 35. After the collet 151c is mated with the end effector 35, the first member 151a is inserted into the collet 151c. The shaft 50a of the tool 50 is inserted into the first member 151a until a tip 50b of the tool 50 is in a desired position. Once the tip 50b is properly positioned, the collet knob 15 Id is tightened down onto the fingers or tangs of the collet 151a. The clamping force exerted on the first member 151a and the tool 50 by the collet fingers secures the first member 151a and the tool 50 in place. In this manner, the holding device 151 substantially prevents movement of the first member 151a and the tool 50 relative to the end effector 35. Once installed on the end effector 35, a portion 50c (shown in FIG. 3Β) of the tool 50 projects from the end effector 35 and can be attached to a motor for driving the tool 50. Additionally, because the holding device 151 and the tool 50 can be decoupled from the end effector 35, the components can be removed as necessary for replacement, sterilization, and the like. [0045] The user interface 37 enables physical interaction between the user and the haptic device 30. The interface 37 is configured so that the user can grasp the interface 37 and manipulate the tool 50 while simultaneously receiving haptic guidance from the haptic device 30. The interface 37 may be a separate component affixed to the haptic device 30 (such as a handle or hand grip) or may simply be part of the existing structure of the haptic device 30 (such as the arm 33). Because the interface 37 is affixed to or is an integral part of the haptic device 30, any haptic feedback output by the haptic device 30 is transmitted directly to the user when the user is in contact with the interface 37. Thus, the interface 37 advantageously enables the haptic device 30 to hold the tool 50 cooperatively with the surgeon (as shown in FIG. 2C) and to simultaneously provide haptic guidance. [0046] The tracking system 40 of the surgical system 10 is configured to track one or more objects during a surgical procedure to detect movement of the objects. As described in the above-referenced Pub. No. US 2006/0142657. The tracking system 40 includes a detection device that obtains a pose (i.e., position and orientation) of an object with respect to a coordinate frame of reference of the detection device 41. As the object moves in the coordinate frame of reference, the detection device tracks the object. A change in the pose of the object indicates that the object has moved. In response, the computing system 20 can make appropriate adjustments to the control parameters for the haptic device 30. For example, when the anatomy moves, the computing system 20 can make a corresponding adjustment to a virtual haptic object (e.g., a virtual cutting boundary) that is registered to the anatomy. Thus, the virtual cutting boundary moves along with the anatomy. [0047] Pose data from the tracking system 40 is also used to register (i.e., map or associate) coordinates in one space to those in another space to achieve spatial alignment, for example, using a coordinate transformation process. Registration may include any known registration technique, such as, for example, image-to-image registration; image-to-physical space registration; and/or combined image-to-image and image-to-physical-space registration. In one embodiment, the anatomy and the tool 50 (in physical space) are registered to a representation of the anatomy (such as an image 614 in image space) as disclosed in the above-referenced Pub. No. US 2006/0142657 and shown in FIG. 9. Based on registration and tracking data, the surgical system 10 can determine (a) a spatial relationship between the anatomy and the image 614 and (b) a spatial relationship between the anatomy and the tool 50 so that the computing system 20 can superimpose, and continually update, a virtual representation 616 of the tool 50 on the image 614. The relationship between the virtual representation 616 and the image 614 is substantially identical to the relationship between the tool 50 and the actual anatomy. [0048] The tracking system 40 may be any tracking system that enables the surgical system 10 to continually determine (or track) a pose of the relevant anatomy of the patient and a pose of the tool 50 (and/or the haptic device 30). For example, the tracking system 40 may comprise a non-mechanical tracking system, a mechanical tracking system, or any combination of non-mechanical and mechanical tracking systems suitable for use in a surgical environment. [0049] In one embodiment, the tracking system 40 includes a non-mechanical tracking system as shown in FIG. 1. The non-mechanical tracking system is an optical tracking system that comprises a detection device 41 and a trackable element (or tracker) that is configured to be disposed on a tracked object and is detectable by the detection device 41. In one embodiment, the detection device 41 includes a visible light-based detector, such as a micron tracker, that detects a pattern (e.g., a checkerboard pattern) on a tracking element. In another embodiment, the detection device 41 includes a stereo camera pair sensitive to infrared radiation and positionable in an operating room where the surgical procedure will be performed. The tracker is configured to be affixed to the tracked object in a secure and stable manner and includes an array of markers (e.g., an array SI in FIG. 4) having a known geometric relationship to the tracked object. As is well known, the markers may be active (e.g., light emitting diodes or LEDs) or passive (e.g., reflective spheres, a checkerboard pattern, etc.) and have a unique geometry (e.g., a unique geometric arrangement of the markers) or, in the case of active, wired markers, a unique firing pattern. In operation, the detection device 41 detects positions of the markers, and the surgical system 10 (e.g., the detection device 41 using embedded electronics) calculates a pose of the tracked object based on the markers’ positions, unique geometry, and known geometric relationship to the tracked object. The tracking system 40 includes a tracker for each object the user desires to track, such as an anatomy tracker 43 (to track patient anatomy), a haptic device tracker 45 (to track a global or gross position of the haptic device 30), an end effector tracker 47 (to track a distal end of the haptic device 30), and an instrument tracker 49 (to track an instrument held manually by the user). [0050] The anatomy tracker 43 is disposed on the patient’s anatomy and enables the anatomy to be tracked by the detection device 41. The anatomy tracker 43 includes a fixation device for attachment to the anatomy, such as a bone pin, surgical staple, screw, clamp, intramedullary rod, or the like. In one embodiment, the anatomy tracker 43 is configured for use during knee replacement surgery to track a femur F and a tibia Τ of a patient. In this embodiment, as shown in FIG. 1, the anatomy tracker 43 includes a first tracker 43a adapted to be disposed on the femur F and a second tracker 43b adapted to be disposed on the tibia Τ. As shown in FIG. 4, the first tracker 43a includes a fixation device comprising bone pins Ρ, a clamp 400, and a unique array SI of markers (e.g., reflective spheres). The second tracker 43b is identical to the first tracker 43a except the second tracker 43b is installed on the tibia Τ and has its own unique array of markers. When installed on the patient, the first and second trackers 43a and 43b enable the detection device 41 to track a position of the femur F and the tibia Τ. [0051] The haptic device tracker 45 is disposed on the haptic device 30 and enables the surgical system 10 to monitor a global or gross position of the haptic device 30 in physical space so that the surgical system 10 can determine whether the haptic device 30 has moved relative to other objects in the surgical environment, such as the patient, or whether the detection device 41 has moved relative to the haptic device 30. Such information is important because the tool 50 is attached to the haptic device 30. For example, if the user repositions or inadvertently bumps the haptic device 30 while cutting the femur F with the tool 50, the tracking system 40 will detect movement of the haptic device tracker 45. In response, the surgical system 10 can make appropriate adjustments to programs running on the computing system 20 to compensate for movement of the haptic device 30 (and the attached tool 50) relative to the femur F. As a result, integrity of the bone preparation process is maintained. [0052] The haptic device tracker 45 includes a unique array S3 of markers (e.g., reflective spheres) and is adapted to be mounted on the base 32 of the haptic device 30 in a manner that enables the tracker 45 to be secured in a fixed position relative to the base 32. The fixed position is calibrated to the haptic device 30 during a haptic device registration calibration (discussed below) so that the surgical system 10 knows where the tracker 45 is located relative to the base 32. Once calibrated, the fixed position is maintained during the surgical procedure. In one embodiment, as shown in FIGS. 2Α and 5, the tracker 45 is mounted on an arm 34 having a proximal end connected to the base 32 (e.g., via screws, rivets, welding, clamps, magnets, etc.) and a distal end that carries the array S3 of markers. The arm 34 may include one or more support members (e.g., brackets, struts, links, etc.) having a rigid structure so that the haptic device tracker 45 is fixed in a permanent position with respect to the haptic device 30. Preferably, however, the arm 34 is adapted for adjustability so that the array S3 is moveable relative to the haptic device 30. Thus, the array S3 can be positioned independently of the base 32 before being secured in a fixed position. As a result, a position of the array S3 can be customized for each surgical case (e.g., based on patient size, operating table height, etc.) and set so as not to impede the surgeon during a surgical procedure. [0053] Adjustability may be imparted to the arm 34 in any known manner (e.g., an articulating linkage, a flexible neck, etc.). For example, in the embodiment of FIG. 5, the arm 34 includes a ball joint 34b on which the haptic device tracker 45 is disposed. The ball joint 34b includes a locking mechanism actuated by a handle 34a. In operation, the user may unscrew the handle 34a to release the ball joint 34b, manipulate the ball joint 34b until the tracker 45 is in a desired position, and tighten the handle 34a until the ball joint 34b is fixedly secured. In this manner, the tracker 45 may be fixed in the desired position. As an alternative to securing the tracker 45 in a fixed position and calibrating the fixed position to the haptic device 30, the arm 34 may include position sensors (e.g., encoders) similar to the position sensors of the arm 33 to provide measurements of a pose of the arm 34 relative to the base 32. When position sensors are incorporated into the arm 34, the haptic device registration calibration (discussed below) may be eliminated because the surgical system 10 can determine the location of the tracker 45 with respect to the base 32 based on the pose of the arm 34 provided by the position sensors. [0Θ54) The end effector tracker 47 enables the surgical system 10 to determine a pose of a distal end of the haptic device 30. The tracker 47 is preferably configured to be disposed on the haptic device 30 at a distal end of the arm 33 (e.g., on the segment 33c, the end effector 35, the tool 50, and/or the tool holder 51). In one embodiment (shown in FIG. 6Β), the tracker 47 is disposed on the tool holder 51. As shown in FIG. 6Α, the tracker 47 may include a unique array S4 of markers (e.g., reflective spheres) and may be adapted to be affixed to the haptic device 30 in any known manner, such as, for example, with a clamping device, threaded connection, magnet, or the like. In the embodiment of FIG. 6Α, the tracker 47 is affixed to the haptic device 30 with a clamp 1500. The clamp 1500 may be formed integrally with the array S4 or affixed to the array S4 in any conventional manner, such as with mechanical hardware, adhesive, welding, and the like. The clamp 1500 includes a first portion 1505, a second portion 1510, and a thumbscrew 1515. The first and second portions 1505 and 1510 are shaped to receive a portion of the haptic device 30, such as a cylindrical portion of the tool 50 and/or the tool holder 51. In one embodiment, the cylindrical portion is the first member 151a of the holding device 151 of the tool holder 51 (shown in FIGS. 3 A and 3Β). To enable the clamp 1500 to grasp the cylindrical portion, the first portion 1505 may have a V-shaped groove (shown in FIG. 6Α) and the second portion 1510 may have a planar surface so that the first and second portions 1505 and 1510 can securely receive the cylindrical portion when tightened together. In one embodiment, the clamp 1500 is configured so that the surgical system 10 can determine a point and/or an axis of the haptic device 30 at a location where the tracker 47 is disposed on the haptic device 30. For example, when the tracker 47 is secured to the cylindrical portion with the clamp 1500, the surgical system 10 is able to determine a point and/or an axis of the cylindrical portion (e.g., an axis Η-Η shown in FIG. 3Β) based on the geometry of the tracker 47, specifically, the geometric relationship between the reflective spheres on the array S4 and the V-shaped groove on the first portion 1505 of the clamp 1500. [0055] To install the end effector tracker 47 on the haptic device 30, the first and second portions 1505 and 1510 of the clamp 1500 are disposed around a cylindrical portion of the tool 50 or the tool holder 51 and tightened together using the thumbscrew 1515. The effector 47 may include a feature configured to aid in positioning the tracker 47 relative to the end effector 35. For example, the tracker 47 may include one or more surfaces 1503 (shown in FIG. 6Β) that are adapted to abut corresponding surfaces on the haptic device 30. In one embodiment, the surfaces 1503 are configured to abut a portion of the tool holder 51, such as fingers or tangs of the collet 15 lc as shown in FIG. 6Β. In operation, the user slides the clamp 1500 along the cylindrical portion of the tool holder 51 until the surfaces 1503 abut the fingers or tangs of the collet 151c and then tightens the thumb screw 1515. The tracker 47 may be removed by loosening the thumbscrew 1515 and sliding the tracker 47 off the cylindrical portion. In this manner, the tracker 47 may be removably and repeatably secured in a known position relative to the end effector 35. The tracker 47 may also include a feature, such as a divot 47a shown in FIG. 6Β, to facilitate orientation of the tracker 47 relative to the end effector 35, for example, to avoid installing the tracker 47 upside down. After installation of the tracker 47, the user may reorient the tracker 47 (if desired) by loosening the clamp 1500 and swiveling the tracker 47 around the cylindrical portion. Thus, the clamp 1500 enables adjustability of the tracker 47 relative to the end effector 35. Adjustability is particularly useful during the haptic device registration calibration (described below) to orient the tracker 47 to face the detection device 41 to thereby improve tracking accuracy and visibility. [0056] Alternatively, instead of a separate end effector tracker 47, the haptic device 30 may incorporate fiducials on the end effector 35. The fiducials may be similar to the unique array S4 of markers and may include, for example, reflective spheres. In contrast to the end effector tracker 47, the fiducials are not removed from the end effector 35 prior to surgery. One disadvantage of not removing the fiducials is that blood and debris may contaminate the fiducials during surgery, which occludes the fiducials and degrades their ability to reflect light to the detection device 41. Thus, the fiducials preferably include a smooth plastic coating so that any surface contamination can be easily removed. The fiducials should be mounted in a location on the end effector 35 that is visible to the detection device 41 during the haptic device registration calibration (described below) but that will not impede the surgeon during the surgical procedure. For example, the fiducials may be mounted on an underside of the end effector 35. Alternatively, the fiducials may be mounted on an adjustable linkage that can be positioned in a registration calibration position where there is a clear line of site between the fiducials and the detection device 41 and a stowed position where the fiducials will not hamper the surgeon during the surgical procedure. [0057] In one embodiment, the end effector tracker 47 is used only during the haptic device registration calibration (discussed below) and is removed prior to performance of the surgical procedure. In this embodiment, the end effector tracker 47 is disposed on the end effector 35 and the haptic device tracker 45 is mounted to the base 32 (e.g., via the adjustable arm 34) so that a position of the haptic device tracker 45 with respect to the haptic device 30 is adjustable. Because the position of the haptic device tracker 45 is adjustable, the surgical system 10 does not know the location of the haptic device tracker 45 relative to the haptic device 30. To determine the geometric relationship between the haptic device 30 and the haptic device tracker 45, the registration calibration process utilizes the end effector tracker 47 (as described below). Although the end effector tracker 47 may remain on the haptic device 30 for the surgical procedure and can be continuously monitored, it is advantageous to remove the end effector tracker 47 when the registration calibration is complete to prevent the tracker 47 from impeding the surgeon during the surgical procedure. Another advantage of removing the tracker 47 is that movement of the tracker 47 during the surgical procedure may result in degraded performance of the surgical system 10 due to delays or limited bandwidth as the tracking system 40 detects and processes movement of the tracker 47. [0058] In an alternative embodiment, the end effector tracker 47 may be eliminated. In this embodiment, the haptic device tracker 45 is fixed in a permanent position on the haptic device 30. Because the haptic device tracker 45 is permanently fixed on the haptic device 30, the relationship between the haptic device tracker 45 and the coordinate frame of the haptic device 30 is known. Accordingly, the surgical system 10 does not need the end effector tracker 47 for the registration calibration to establish a relationship between the haptic device tracker 45 and the coordinate frame of the haptic device 30. In this embodiment, the haptic device tracker 45 may be rigidly mounted on the haptic device 30 in any position that permits the tracking system 40 to see the array S3 of the haptic device tracker 45, that is close enough to the surgical site so as not to degrade accuracy, and that will not hinder the user or interfere with other personnel or objects in the surgical environment. [0059] In another alternative embodiment, the haptic device 30 is firmly locked in position. For example, the haptic device 30 may be bolted to a floor of the operating room or otherwise fixed in place. As a result, the global or gross position of the haptic device 30 does not change substantially so the surgical system 10 does not need to track the global or gross position of the haptic device 30. Thus, the haptic device tracker 45 may be eliminated. In this embodiment, the end effector tracker 47 may be used to determine an initial position of the haptic device 30 after the haptic device 30 is locked in place. One advantage of eliminating the haptic device, tracker 45 is that the surgical system 10 does not need to include monitoring data for the haptic device tracker 45 in the control loop. As a result, noise and errors in the control loop are reduced. Alternatively, the haptic device tracker 45 may be retained but is monitored only for detecting excessive motion of the base 32 or the tracking system 40 rather than being included in the control loop. [0060] In another alternative embodiment, the tracking system 40 is attached to the haptic device 30 in a permanently fixed position. For example, the tracking system 40 (including the detection device 41) may be mounted directly on the haptic device 30 or connected to the haptic device 30 via a rigid mounting arm or bracket so that the tracking system 40 is fixed in position with respect to the haptic device 30. In this embodiment, the haptic device tracker 45 and the end effector tracker 47 may be eliminated because a position of the tracking system 40 relative to the haptic device 30 is fixed and can be established during a calibration procedure performed, for example, during manufacture or set up of the haptic device 30. [0061] In another alternative embodiment, the tracking system 40 is attached to the haptic device 30 in an adjustable manner. For example, the tracking system 40 (including the detection device 41) may be connected to the haptic device 30 with an arm, such as the adjustable arm 34 (described above in connection with the haptic device tracker 45) so that the tracking system 40 is moveable from a first position to a second position relative to the haptic device 30. After the arm and the tracking system 40 are locked in place, a calibration can be performed to determine a position of the tracking system 40 relative to the haptic device 30. A calibration to determine the position of the tracking system 40 relative to the haptic device 30 may be performed, for example, by viewing the end effector tracker 47 with the tracking system 40. [0062] The instrument tracker 49 is adapted to be coupled to an instrument 150 that is held manually in the hand of the user. The instrument 150 may be, for example, a probe, such as a registration probe. As shown in FIG. 7, the instrument tracker 49 may comprise a unique array S5 of markers (e.g., reflective spheres) formed integrally with the instrument 150 or affixed to the instrument 150 in any known manner, such as with mechanical hardware, adhesive, welding, a threaded connection, a clamping device, a clip, or the like. When the instrument tracker 49 is removably connected to the instrument 150, such as with a clip or a clamping device, the instrument tracker 49 should be calibrated to the instrument 150 to determine a relationship between the instrument tracker 49 and a geometry of the instrument 150. Calibration may be accomplished in any suitable manner, such as with a tool calibrator having a divot or a V-groove (e.g., as described in U.S. Patent Application Pub. No. US 2003/0209096. Knowing a geometric relationship between the array SS and the instrument ISO, the surgical system 10 is able to calculate a position of a tip of the instrument 150 in physical space. Thus, the instrument ISO can be used to register an object by touching a tip of the instrument 150 to a relevant portion of the object. For example, the instrument 150 may be used to register a bone of the patient by touching landmarks or points on the surface of the bone. [0063] The tracking system 40 may additionally or alternatively include a mechanical tracking system. In contrast to the non-mechanical tracking system (which includes a detection device 41 that is remote from the trackers 43,45,47, and 49), a mechanical tracking system may be configured to include a detection device (e.g., an articulating linkage having joint encoders) that is physically connected to the tracked object. The tracking system 40 may include any known mechanical tracking system, such as a mechanical tracking system as described in U.S. Patent No. 6,033,415, U.S. Patent No. 6,322,567, and/or Pub. No. US 2006/0142657, ora fiber optic tracking system. [0064] In operation, the computing system 20, the haptic device 30, and the tracking system-40 cooperate to enable the surgical system 10 to provide haptic guidance to the user during a surgical procedure. The haptic guidance manifests as a result of the user’s interaction with a virtual environment generated by a haptic rendering process. The haptic rendering process ipay include any suitable haptic rendering process, such as, for example, a haptic rendering process as described in U.S. Patent No. 6,111,577, In a preferred embodiment, the haptic rendering process includes a haptic rendering algorithm as disclosed in the above-referenced Pub. No. US 2006/0142657 and/or U.S. Patent Application Serial No. 11/646,204, fried December 27,2006, In the preferred embodiment, the surgical system 10 employs point-based haptic interaction where only a virtual point, or haptic interaction point (HIP), interacts -with virtual objects in the virtual environment. The HIP corresponds to a physical point on the haptic device 30, such as, for example, a tip of the tool 50. The HIP is coupled to the physical point on the haptic device 30 by a virtual spring/damper model. The virtual object with which the HIP interacts may be, for example, a haptic object 705 (shown in FIG. 11) having a surface 707 and a haptic force normal vector Fn. A penetration depth dj is a distance between the HEP and the nearest point on the surface 707. The penetration depth dj represents the depth of penetration of the HIP into the haptic object 705. [0065] One embodiment of a haptic rendering process is represented generally in FIG. 10. In operation, position sensors (block 2502) of the haptic device 30 (block 2500) provide data to a forward kinematics process (block 2504). Output of the forward kinematics process is input to a coordinate transformation process (block 2506). A haptic rendering algorithm (block 2508) receives data from the coordinate transformation process and provides input to a force mapping process (block 2510). Based on the results of the force mapping process, actuators (block 2512) of the haptic device 30 are actuated to convey an appropriate haptic wrench (i.e., force and/or torque) to the user. [0066] In one embodiment, the surgical system 10 includes a haptic rendering process as shown in FIG. 12. The dashed lines of FIG. 12 correspond to the blocks of FIG. 10. As shown in FIG. 12, the coordinate transformation process 2506 utilizes registration and tracking information for the anatomy and the haptic device 30 and input from the forward kinematics process 2504 to determine coordinate transformations (or transforms) that enable the surgical system 10 to calculate a location of an endpoint of the haptic device 30 relative to specified portions of the anatomy. For example, the coordinate transformation process 2506 enables the surgical system 10 to calculate a location of the tip of the tool 50 relative to desired cut surfaces on the anatomy. [0067] As shown in FIG. 13, the coordinate transformation process 2506 includes defining various coordinate systems, including a first coordinate system Χΐ associated with the detection device 41 of the tracking system 40, a second coordinate system Χ2 associated with the anatomy (e.g., a bone or an anatomy tracker 43a or 43b affixed to the bone), a third coordinate system Χ3 associated with the haptic device tracker 45, a fourth coordinate system X» associated with the haptic device 30 (e.g., the base 32 of the haptic device), and a fifth coordinate system Χ5 associated with a virtual environment (e.g., a representation of the anatomy including a virtual (or haptic) object defining desired cut surfaces for installation of an implant). Coordinate transformations are then determined that enable coordinates in one coordinate system to be mapped or transformed to another coordinate system. [0068] A first coordinate transformation Τΐ (shown in FIGS. 12 and 13) is a transformation from the coordinate system of the anatomy (the second coordinate system Χ2) to the coordinate system of the virtual environment (the fifth coordinate system Χ5). Thus, in embodiments where the virtual environment includes a virtual object defining a shape of an implant, the transformation Τ1 relates the physical anatomy to the desired cut locations for installation of the implant. As represented by block 4500 in FIG. 12, the transformation Τΐ may be determined by registering the physical anatomy of the patient to a representation of the anatomy (as described below) and positioning the virtual object relative to the representation of the anatomy. Positioning the virtual object relative to the representation of the anatomy may be accomplished, for example, using any suitable planning process, such as an implant planning process as disclosed in the above-referenced Pub. No. US 2006/0142657. For example, a virtual model that defines a virtual cutting boundary (such as a model of an implant to be implanted in the bone) may be positioned relative to the representation of the anatomy (such as an image of the anatomy) displayed on the display device 23. [0069] A second coordinate transformation Τ2 (shown in FIGS. 12 and 13) is a transformation from the coordinate system of the detection device 41 (the coordinate system Χΐ) to the coordinate system of the anatomy (the coordinate system Χ2). As represented by block 4502 in FIG. 12, the tracking system 40 outputs the transformation Τ2 during a surgical procedure as the detection device 41 monitors motion of the anatomy. Because the detection device 41 continuously monitors the anatomy, the transformation Τ2 is regularly updated to reflect motion of the anatomy. [0070] A third coordinate transformation Τ3 (shown in FIGS. 12 and 13) is a transformation from the coordinate system of the haptic device tracker 45 (the third coordinate system Χ3) to the coordinate system of the haptic device 30 (the fourth coordinate system Χ4). In this embodiment, the haptic device tracker 45 is coupled to the base 32 of the haptic device 30 via the arm 34 (as shown in FIG. 2Α). Thus, the transformation Τ3 relates the location of the haptic device tracker 45 to the base 32 of the haptic device 30. As represented by block 4504 in FIG. 12, the transformation Τ3 may be determined, for example, by performing the haptic device registration calibration as described below. [0071] A fourth coordinate transformation Τ4 (shown in FIGS. 12 and 13) is a ' transformation from the coordinate system of the detection device 41 (the coordinate system Xi) to the coordinate system of the haptic device tracker 45 (the coordinate system Χ3). As represented by block 4506 in FIG. 12, the tracking system 40 outputs the transformation Τ4 during a surgical procedure as the detection device 41 monitors motion of the haptic device tracker 45. Because the detection device 41 continuously monitors the haptic device tracker 45, the transformation Τ4 is regularly updated to reflect motion of the haptic device tracker 45. [0072] A fifth coordinate transformation Τ5 (shown in FIGS. 12 and 13) is a transformation that results from the forward kinematics process 2504. The forward kinematics process 2504 computes a Cartesian endpoint position of the arm 33 of the haptic device 30 as a function of joint angle. As represented by blocks 4508 and 4510 in FIG. 12, the forward kinematics process 2504 receives input from position sensors in the joints of arm 33. Based on this input, the forward kinematics process 2504 computes a position of a distal end of the arm 33 relative to the base 32 of the haptic device 30. Based on a known geometric relationship between the tool 50 and the distal end of the arm 33, a position of the tip of the tool 50 relative to the base 32 of the haptic device 30 can then be computed. Because the position sensors continuously monitor joint position, the transformation T5 is regularly updated to reflect motion of the arm 33. [0073] A sixth coordinate transformation Τβ (shown in FIGS. 12 and 13) is obtained by multiplying the first through fifth coordinate transformations together in an appropriate sequence. In one embodiment, Τβ = Τ1^Τ2^Τ4Τ3^Τ5. The result of the transformation Τβ (represented by a variable χ in FIG. 12) is a location of a virtual point, or haptic interaction point (HIP), relative to the virtual environment. In this embodiment, the HIP corresponds to a location of a physical point on the haptic device 30 (e.g., the tip of the tool 50) relative to the desired cut surfaces defined by the virtual object. Because motion of the anatomy, the haptic device tracker 45, and the arm 33 of the haptic device 30 are continuously monitored, the transformation Τβ is regularly updated to reflect motion of the anatomy, the base 32 of the haptic device 30, and the arm 33 of the haptic device 30. In this manner, the surgical system 10 compensates for motion of objects during a surgical procedure. [0074] One advantage of the present invention is that the surgical system 10 is able to compensate for motion of objects during the surgical procedure in a dynamic manner that is transparent to the user. Specifically, the surgical system 10 operates synchronously by continually monitoring motion of the anatomy, the haptic device tracker 45, and the arm 33 and continually updating the transformations Τ2, Τ4, and Τ5 without interrupting operation of the haptic device 30. In contrast, conventional surgical systems typically operate asynchronously, for example, by requiring the user to stop and reset the system or reregister tracked objects when movement of a tracked object is detected. As a result, with conventional systems, the operation of the system may be interrupted or impeded when motion of a tracked object is detected. Although the present invention can operate synchronously without interrupting the operation of the haptic device 30, it is advantageous to occasionally restrict operation of the haptic device 30, for example, when the surgical system 10 detects abnormal motion, such as when a tracked object moves too fast and/or too far. [0075] In one embodiment, a method of compensating for motion of objects during a surgical procedure includes (a) determining a pose of the anatomy; (b) determining a pose of the tool 50; (c) determining at least one of a position, an orientation, a velocity, and an acceleration of the tool 50; (d) associating the pose of the anatomy, the pose of the tool 50, and a relationship between the pose of the anatomy and the at least one of the position, the orientation, the velocity, and the acceleration of the tool 50; and (℮) updating the association in response to motion of the anatomy and/or motion of the tool 50 without interrupting operation of the surgical device during the surgical procedure. The method may also include the step of providing haptic guidance, based on the relationship, to the user to constrain the user’s manipulation of the surgical tool. The relationship may be based, for example, on a desired interaction between the anatomy and a position, an orientation, a velocity, and/or an acceleration of the tool 50. In one embodiment, the relationship is defined by a virtual object or parameter positioned relative to the anatomy and representing a desired location of an implant and/or cut surfaces for installing the implant. The step of associating the pose of the anatomy, the pose of the tool 50, and the relationship may be accomplished, for example, using registration processes, coordinate transformation processes (e.g., block 2506 of FIG. 10), and implant planning processes (e.g., as described in the above-reference Pub. No. US 2006/0142657). In one embodiment, the step of associating includes (a) defining a first transformation for transforming a coordinate system of the anatomy to a coordinate system of a representation of an anatomy; (b) defining a second transformation for transforming a coordinate system of the tool 50 to a coordinate system of the representation of the anatomy; and (c) associating the relationship with the coordinate system of the representation of the anatomy. To associate the relationship with the coordinate system of the representation of the anatomy, the user may, for example, position a virtual object relative to an image of the anatomy (e.g., as described in the above-reference Pub. No. US 2006/0142657). To enable the surgical system 10 to compensate for motion of objects during the surgical procedure, the step of updating the association may include updating the first transformation and/or the second transformation in response to motion of the anatomy and/or motion of the tool 50. [0076] In this embodiment, the pose of the tool 50 is determined by determining a pose of a first portion of the haptic device 30 to which the tool 50 is coupled, determining a pose of a second portion of the haptic device 30, and calculating the pose of the tool 50 based at least in part on the poses of the first and second portions of the haptic device 30 and a known geometric relationship between the tool 50 and the first portion of the haptic device 30. In one embodiment, the first portion of the haptic device 30 comprises the distal end of the arm 33, and the second portion of the haptic device 30 comprises the base 32 of the haptic device 30. In another embodiment, the second portion of the haptic device 30 comprises an intermediate portion of the arm 33 (e.g., the segments 33a, 33b, or 33c). In one embodiment, rather than mounting the end effector tracker 35 to a distal end of the arm, the end effector tracker 35 could be mounted to an intermediate portion of the arm, such as the elbow. The step of determining the pose of the second portion of the haptic device 30 includes determining a pose of the haptic device tracker 45 (which is mounted on the second portion of the haptic device 30, e.g., to the base 32 or an intermediate portion of the arm 33). Because the pose of the tool 50 is determined based on the poses of the first and second portions of the haptic device 30 and because the surgical system 10 continually updates the poses of the first and second portions (e.g., based on joint encoder data and a position of thè haptic device tracker 45), the pose of the tool 50 is updated to account for motion of the first and second portions. As a result, motion to the tool 50 is determined based on motion of the first and second portions. In this manner, the surgical system 10 is able to compensate for motion of objects during a surgical procedure. [0077] In one embodiment, the tracking system 40 is a non-mechanical tracking system (e.g., as described above in connection with the tracking system 40) that operates at a different update rate than the haptic device 30. For example, the haptic device 30 may update at 2000 Hz while the tracking system 40 updates at 15-30 Hz. The lower update rate of the tracking system 40 limits the dynamic performance of the motion compensation because the 15-30 Hz updates are separated by 1/15 to 1/30 seconds during which time no tracking information is available. Additionally, higher frequency motions of a tracked object will not be present in the output data of the tracking system 40. One disadvantage of poor dynamic performance is that the surgical system 10 may not have sufficient data to move the haptic object precisely in sync with the physical anatomy. As a result, any cuts the surgeon makes may have reduced accuracy. For example, when the surgical system 10 is providing haptic guidance to guide the surgeon in cutting a planar bone surface with a spherical burr, momentary motion of one of the tracked objects combined with poor dynamic performance may result in divots or peaks in the final cut surface. The worse the dynamic performance, the larger the divots and peaks will be. If the bone cuts are for a cemented implants, small divots are acceptable because cement will simply fill the divots. For press fit implants, however, divots cause gaps between the implant and the bone that may potentially inhibit full in-growth of the bone into the implant. Peaks are less critical than divots because they can be easily removed with the burr but will increase the amount of time required to complete bone preparation. [0078] For motion compensation applications, several techniques are beneficial in maximizing performance from tracking systems with dynamic performance issues. First, because of the different update rates, if the coordinate transformation process 2506 uses data directly from the tracking system 40, the desired cut surfaces defined by the virtual object move in abrupt steps in response to detected motion of the anatomy. As a result, a user manipulating the haptic device 30 may experience a rough or “jumpy” feeling when interacting with a haptic object. To address this problem, the surgical system 10 may include an interpolation or other appropriate filter (represented by the blocks 4512 in FIG. 12). The filter also acts to reduce the output noise of the tracking system, which would otherwise result in the user feeling a vibration when interacting with a haptic object, or result in the cut having a rough surface. In a preferred embodiment, the filter is a 3rd order Butterworth filter with a cutoff frequency in a range of 5-10 Hz that samples data from the tracking system 40 at 2000 Hz and produces a filtered output. The filtered output reduces “jumpiness” of the cut surfaces relative to the anatomy from both the “stairstep” output from the tracking system and the noise inherent in the tracking system output updates. The Butterworth filter is characterized by a flat frequency in the passband and is easily designed using commonly available filter design software, such as Mathwork’s Matlab Signal Processing Toolbox “butter” function, which outputs digital or analog filter coefficients based on the desired order and cutoff frequency. Using a higher order will result in sharper rolloff characteristics but require additional computation. A lower cutoff frequency will improve the filtering of the discrete tracking system updates and the tracking system noise but degrade the dynamic performance of the tracking. Alternatively, a Chebychev, Inverse Chebychev, Elliptic, Bessel (Thomson), or other filter can be used instead of a Butterworth filter. In another embodiment, a finite impulse response (FIR) filter can be used. An FIR filter can be designed to be “linear phase” so that all frequencies are delayed by the same amount, which makes compensation for filter delay easier. FIR filters are also well suited to “multi-rate” applications. For the tracking application of the present invention, interpolation would be used to convert the low frequency tracking signal to the high frequency rate of the haptic device 30. FIR filters are better than infinite impulse response (IIR) filters for multi-rate applications because FIR filters do not have feedback, i.e., their outputs are only a function of the input signal, not the output of the filter. Also, computation is only required for the low frequency signal samples, not for every high frequency sample. [0079] In their traditional implementation, all of the above filters are designed for scalar input signals. However, the tracking system 40 will generally output multiple position and orientation signals. In a preferred embodiment, the filter 4512 receives the tracking system output, expressed as a homogenous transformation four by four size matrix that contains the position and orientation information. It is not desirable to filter the elements of this matrix directly because the result will not be a valid homogenous matrix and the orientation will not be filtered properly. Instead, the homogenous transformation is first converted to a three element position vector and a quaternion, which is a four element vector that represents the orientation information. For the small motions between samples, these seven values can then be independently filtered. The quaternion may be normalized before taking the filtered values and converting them back to a homogenous transformation, which is then output from the filter 4512. [0080] In most cases, the position output of the tracking system 40 represents the position of the relevant tracked object at some point in the past. The latency is the time interval between the time when the tracking system 40 samples the tracked object’s position and the time when the surgical system 10 receives this position output. This time interval may include processing time of the tracking system 40, communication delays, and a fraction or multiple of the sampling time of the tracking system 40. The filter 4512 adds additional latency based on the phase delay of the particular filter selected. These latency sources all combine to degrade the dynamic tracking performance and cause the haptic surfaces to lag behind the motion of their associated tracked objects. However, these latency values are usually known or can be measured or estimated fairly accurately. Thus, the latency effect can be partially compensated for. For example, if the combined latency of the tracking system 40 and the filter 4512 is ΐ/, then the filtered position output ρ may be corrected by Αρ = ν //. The velocity value ν can be computed by a (possibly filtered) difference of successive position values or with a washout filter, as described below. In another embodiment, as is well known to those skilled in the art of control theory, a state estimator, state observer, or Kalman filter, which include a simple simulated model of the anatomy and/or the base 32 of the haptic device 30 and internally compute both the position and velocity of the tracked object, could be used to eliminate the latency of the filter 4512. Alternatively, the filter 4512 could be eliminated by utilizing a higher frequency tracking system, such as an encoder-based mechanical tracking system or high speed optical tracking system. [0081] Some tracking systems, notably optical tracking systems, may not produce accurate outputs when tracked objects are moving relative to the camera (i.e., the detection device 41). Errors may result, for example, from motion blur caused by the exposure time or scanning rate of the camera. If the velocity of the tracked object is computed using one of the methods described above and an error model of the tracking system as a function of velocity and/or position is known or determined, these errors may be corrected by adding this error value to the filtered position output. [0082] Dynamic performance of the tracking system 40 is only relevant if the haptic device 30 is capable of rendering a moving haptic object effectively. The haptic rendering capabilities of the haptic device 30 are impacted by the type of haptic control scheme used. The haptic device 30 may utilize any suitable haptic control scheme, such as, for example, admittance control, impedance control, or hybrid control. In an admittance control mode, the haptic device 30 accepts force input and yields position (or motion) output. For example, the haptic device 30 measures or senses a wrench at a particular location on the haptic device 30 (e.g., the user interface 37) and acts to modify a position of the haptic device 30. In an impedance control mode, the haptic device 30 accepts position (or motion) input and yields wrench output. For example, the haptic device 30 measures, senses, and/or calculates a position (i.e., position, orientation, velocity, and/or acceleration) of the tool 50 and applies an appropriate corresponding wrench. In a hybrid control mode, the haptic device 30 utilizes both admittance and impedance control. For example, a workspace of the haptic device 30 may be divided into a first subspace in which admittance control is used and a second subspace in which impedance control is used and/or both position and force inputs may be used to compute a force or position output. For example, in a substantially impedance controlled device, force inputs may be used to cancel out some of the natural friction of the system. In a preferred embodiment, the haptic device 30 is designed for impedance control, where the haptic device 30 reads the position and/or orientation of the user-manipulated surgical tool 50 and outputs an appropriate force and/or torque. Impedance control devices have the advantage of simplicity (no force sensor is required), better stability properties when the tool contacts physical objects (such as when cutting bone), and better performance when moving in free space. Admittance control devices, however, have an advantage in that they can render haptic objects with very stiff walls more easily than impedance control devices. With regard to motion tracking, impedance control devices are advantageous in that their performance is related to the open-loop force bandwidth and physical system dynamics. In contrast, the performance of an admittance control device depends on the closed-loop position control performance, which tends to be slower than the open-loop force and physical system dynamics. [0083] Returning to the haptic rendering algorithm of FIG. 10, the HIP location, χ, determined by the coordinate transformation process 2506 is provided as input to the haptic rendering algorithm 2508 as shown in FIG. 12. A collision detection/proxy location haptic rendering process (represented by block 2514 in FIG. 12) receives the HIP location, χ, as input and outputs a desired location, xa- The HIP location, χ, is subtracted from the desired location, xj, and the result, Ax, is multiplied by a haptic stiffness, Kp, to determine a positiondependent force command, Fspring. A desired velocity is also determined by taking the derivative, xd, of the desired location, xd. The desired velocity is used in the computation of a damping force, Fdamping. [0084] As shown in FIG. 12, the damping force, Fdamping, is computed by subtracting the desired velocity, xd, from a Cartesian endpoint velocity, χ, of the haptic device 30 and multiplying the result by a damping gain, Κ∩. The Cartesian endpoint velocity, χ, is computed using data from position sensors in motors of the arm 33. As discussed above in connection with the haptic device 30, the arm 33 of the haptic device 30 preferably includes a cable transmission and position sensors in the motors and joints of the arm 33. In a preferred embodiment, joint encoders (represented by block 4508 of FIG. 12) are used to obtain joint position measurements, and motor encoders (represented by block 4516 of FIG. 12) are used to compute velocity measurements. The joint position measurements Eire used in the forwEird kinematics process 2504 to determine the transformation Τ5 and Eire also provided eis input to a gravity compensation algorithm (represented by block 4518 in FIG. 12). The gravity compensation algorithm computes gravity torques, Tgmv_comp, required to counteract gravity loads on the segments of the arm 33 as a function of joint Eingle. In contrast, the motor position measurements are differenced and filtered to compute a motor velocity measurement. A washout filter (as represented by block 4520 in FIG. 12) combines the differentiating and smoothing into one filter. The washout filter may be represented in the Laplace domain as: ^VcvC5) = T~ -+ 1 Ρ where j is the Laplace transform vEiriable, and where ρ determines the location of poles and in general should be located about two to three times faster than the fastest system pole. In one embodiment, the pole is placed at about 80 Hz. The filtered velocity is then multiplied by a Jacobian matrix, J, to obtain the Cartesian endpoint velocity, χ, of the haptic device 30. [0085] The washout filter limits the high-frequency gain thereby limiting the amplification of noise inherent in a derivative or differencing operation Emd removing sampling-rate ELrtifacts. The washout filter has a single pEirameter, ρ, which simplifies design and timing of the filter, compEired with separate velocity differencing and smoothing operations. The Laplace domain representation given above can be transformed into a discrete-time representation that is suitable for implementation on a digital computer using the well-known bilinear transform or z-transform. In an alternative embodiment to the washout filter, a simple differenced position signal can be filtered with a Butterworth or other filter described above to provide a velocity measure. Alternatively, a filtered position signal can be differenced and possibly filtered again using any of the filters described above. [0086] As shown in FIG. 12, Fdamptng and Ftprmg are summed in the force mapping process 2510 to obtain a desired haptic force, Fhapttc- The desired haptic force is multiplied by a transposed Jacobian matrix, JT, to computer motor torques, , required to generate the desired haptic force. The gravity torques, amp, are added to the motor torques, TlKrUc, to obtain a total torque, r,... The haptic device 30 is commanded to apply the total torque, rfjrjJ, to the motors of the arm 33. In this manner the haptic rendering process enables the surgical system 10 to control the haptic device 30, which then responds to the commanded torques, user interaction, and interaction with the anatomy. [00871 The haptic device 30 is preferably configured to operate in various operating modes. For example, the haptic device 30 may be programmed to operate in an input mode, a hold mode, a safety mode, a free mode, an approach mode, a haptic (or burring) mode, and/or any other suitable mode. The operating mode may be selected manually by die user (e.g., using a selection button represented graphically on the display device 23 or a mode switch located on file haptic device 30 and/or the computing system 20) and/or automatically by a controller or software process. In the input mode, the haptic device 30 is enabled for use as an input device to input information to the surgical system 10. When the haptic device 30 is in the input mode, the user may operate the haptic device 30 as a joystick or other input device, for example, as described above in connection with the end effector 35 and/or in U.S. Patent Application Serial No. 10/384,078 (Pub. No. US 2004/0034282), [0088] In file hold mode, file arm 33 of the haptic device 30 may be locked in a particular pose. For example, the arm 33 may be locked using brakes, control servoing techniques, and/or any other appropriate hardware and/or software for stabilizing the arm 33. The user may desire to place the haptic device 30 in the hold mode, for example, during an activity such as bone cutting to rest, confer with a colleague, allow cleaning and irrigation of the surgical site, and the like. In the safety mode, the tool SO coupled to the haptic device 30 may be disabled, for example, by shutting off power to the tool 50. In one embodiment, the safety mode and the hold mode may be executed simultaneously so that the tool SO is disabled when the arm 33 of the haptic device 30 is locked in position. (0089] In the free mode, the end effector 35 of the haptic device 30 is freely moveable within the workspace of the haptic device 30. Power to the tool 50 is preferably deactivated, and the haptic device 30 may be adapted to feel weightless to the user. A weightless feeling may be achieved, for example, by computing gravitational loads acting on the segments 33a, 33b, and 33c of the arm 33 and controlling motors of the haptic device 30 to counteract the gravitational loads (e.g., as described below in connection with block 4518 of FIG. 12). Asa result, the user does not have to support the weight of the arm. The haptic device 30 may be in the free mode, for example, until the user is ready to direct the tool 50 to a surgical site on the patient’s anatomy. [0090] In the approach mode, the haptic device 30 is configured to guide the tool 50 to a target object, such as, for example, a surgical site, feature of interest on the patient’s anatomy, and/or haptic object registered to the patient, while avoiding critical structures and anatomy. For example, in one embodiment, the approach mode enables interactive haptic positioning of the tool 50 as described in U.S. Patent Application Serial No. 10/384,194 (Pub. No. US 2004/0034283), In another embodiment, the haptic rendering application may include a haptic object defining an approach volume (or boundary) that constrains the tool 50 to move toward the target object while avoiding sensitive features such as blood vessels, tendons, nerves, soft tissues, bone, existing implants, and the like. For example, as shown in FIG. 1, the approach volume may include the haptic object 300, which is substantially cone-shaped, funneling from a large diameter to a small diameter in a direction toward the target object (e.g., a proximal end of the tibia Τ or a distal end of the femur F). In operation, the user may freely move the tool 50 within the boundaries of the approach volume. As the user moves the tool 50 through the approach volume, however, the tapering funnel shape constrains tool movement so that the tool 50 does not penetrate the boundaries of the approach volume. In this manner, the tool 50 is guided directly to the surgical site. [0091] Another embodiment of the approach mode is shown in FIG. 8, which illustrates a haptic object 208 corresponding to a femoral component of a knee prosthesis and a haptic object 208 corresponding to a tibial component of the knee prosthesis. In this embodiment, the haptic rendering application creates a virtual object that represents a pathway from a first position to a second position. For example, the virtual object may include a haptic object 310, which is a virtual guide wire (e.g., a line) defining a pathway from a first position (e.g., a position of the tool 50 in physical space) to a second position that includes a target (e.g., a target object such as the haptic object 206 or 208). In the approach mode, the haptic object 310 is activated so that movement of the tool 50 is constrained along the pathway defined by the haptic object 310. The surgical system 10 deactivates the haptic object 310 when the tool 50 reaches the second position and activates the target object (e.g., the haptic object 206 or 208). The tool 50 may be automatically placed in the haptic (or burring) mode when the haptic object 206 or 208 is activated. In a preferred embodiment, the haptic object 310 may be deactivated to enable the tool 50 to deviate from the pathway. Thus, the user can override the haptic guidance associated with the haptic object 310 to deviate from the guide wire path and maneuver the tool 50 around untracked objects (e.g., retractors, lamps, etc.) the cannot be accounted for when the virtual guide wire is generated. Thus, the approach mode enables the user to quickly deliver the tool 50 to a target object while avoiding critical structures and anatomy. In the approach mode, power to the tool 50 is preferably deactivated so that the tool is not accidentally energized, for example, when the user is inserting the tool through an incision or navigating soft tissue in a joint. The approach mode generally precedes the haptic mode. [0092] In the haptic (or burring) mode, the haptic device 30 is configured to provide haptic guidance to the user during a surgical activity such as bone preparation. In one embodiment, as shown in FIG. 8, the haptic rendering application may include the haptic object 206 defining a cutting volume on the tibia Τ. The haptic object 206 may have a shape that substantially corresponds to a shape of a surface of a tibial component. The haptic device 30 may enter the haptic mode automatically, for example, when the tip of the tool 50 approaches a predefined point related to a feature of interest. In the haptic mode, the haptic object 206 may also be dynamically modified (e.g., by enabling and disabling portions of a haptic surface) to improve performance of the haptic device 30 when sculpting complex shapes or shapes with high curvature as described, for example, in U.S. Patent Application Serial No. 10/384,194 (Pub. No. US 2004/0034283), ' In the haptic mode, power to the tool 50 is activated, and the tip of the tool 50 is constrained to stay within the cutting volume to enable a precise bone resection. In another embodiment, an orientation constraint may be implemented, for example, by generating a slowly increasing force to draw the user inside the haptic volume if the user is in proximity to the haptic volume. Additionally, in this embodiment, the tool 50 can be disabled whenever the tool 50 is outside the haptic volume. In another embodiment, the tool 50 can be disabled unless the haptic device 30 is generating haptic feedback forces. (0093) In operation, the surgical system 10 may be used for surgical planning and navigation as disclosed in the above-referenced Pub. No. US 2006/0142657. The surgical system 10 may be used, for example, to perform a knee replacement procedure or other joint replacement procedure involving installation of an implant. The implant may include any implant or prosthetic device, such as, for example, a total knee implant; a unicondylar knee implant; a modular knee implant; implants for other joints including hip, shoulder, elbow, wrist, ankle, and spine; and/or any other orthopedic and/or musculoskeletal implant, including implants of conventional materials and more exotic implants, such as orthobiologics, drug delivery implants, and cell delivery implants. Prior to performance of the procedure, the haptic device 30 is initialized, which includes a homing process, a kinematic calibration, and a haptic device registration calibration. [0094] The homing process initializes the position sensors (e.g., encoders) in the arm 33 of the haptic device 30 to determine an initial pose of the arm 33. Homing may be accomplished in any known manner such as by manipulating the arm 33 so that each joint encoder is rotated until an index marker on the encoder is read. The index marker is an absolute reference on the encoder that correlates to a known absolute position of the joint. Thus, once the index marker is read, the control system of the haptic device 30 knows that the joint is in an absolute position. As the arm 33 continues to move, subsequent positions of the joint are calculated based on the absolute position and subsequent displacement of the encoder. [0095] The kinematic calibration identifies errors in the kinematic parameters of the forward kinematics process 2504 (shown in FIG. 10). The forward kinematics process 2504 calculates a Cartesian position and orientation of the end effector 35 based on the measured joint angles of the arm 33 and the as-designed geometric properties of the haptic device 30 (e.g., length and offset of the segments 33a, 33b, and 33c of the arm 33). Due to manufacturing inaccuracies, however, the actual geometric properties of the haptic device 30 may deviate from the as-designed geometric properties, which results in error in the output of the forward kinematics process 2504. To determine the error, a kinematic calibration fixture is attached to the haptic device 30. In one embodiment, the fixture is a calibration bar having a fixed, known length. To perform the kinematic calibration, the end effector 35 is replaced with a calibration end effector having one or more ball joints (e.g., four ball joints arranged to form a cross, where a ball joint is located on each endpoint of the cross), and the arm 34 (on which the haptic device tracker 45 mounts) is removed and remounted in a horizontal configuration. A first end of the calibration bar is magnetically engaged with a ball joint on the arm 34, and a second end of the calibration bar is magnetically engaged with one of the ball joints on the calibration end effector. The calibration end effector is then moved to a plurality of positions (manually or automatically) as data is captured by the surgical system 10. After sufficient data has been collected (e.g., 100 data points), the second end of the calibration bar is magnetically engaged with a different ball joint on the calibration end effector. The process is repeated until data is captured for each ball joint on the calibration end effector. Using the existing kinematic parameters and measured joint angles, the data is used to calculate the length of the calibration bar. The computed length of the calibration bar is compared with the known actual length. The difference between the computed length and the known length is the error. Once the error is determined, the kinematic parameters can be adjusted to minimize aggregate error in the forward kinematics process 2504 using, for example, a numerical nonlinear minimization algorithm such as Levenberg-Marquardt. [0096] The haptic device registration calibration establishes a geometric relationship or transformation between a coordinate system of the haptic device tracker 45 (e.g., the coordinate system Χ3 shown in FIG. 13) and the coordinate system of the haptic device 30 (e.g., the coordinate system Χ4 shown in FIG. 13). If the haptic device tracker 45 is fixed in a permanent position on the haptic device 30, the registration calibration is unnecessary because the geometric relationship between the tracker 45 and the haptic device 30 is fixed and known (e.g., from an initial calibration performed during manufacture or setup). In contrast, if the tracker 45 can move relative to the haptic device 30 (e.g., if the arm 34 on which the tracker 45 is mounted is adjustable), the registration calibration must be performed to determine the geometric relationship between the tracker 45 and the haptic device 30. [0097] The registration calibration involves securing the haptic device tracker 45 in a fixed position on the haptic device 30 and temporarily affixing the end effector tracker 47 to the end effector 35, for example, with the clamp 1500 shown in FIG. 6Α. To register the haptic device tracker 45 to the haptic device 30, the end effector 35 (and thus the end effector tracker 47) is moved to various positions in a vicinity of the anatomy (e.g., positions above and below the knee joint, positions medial and lateral to the knee joint) while the tracking system 40 acquires pose data for the trackers 45 and 47 relative to the tracking system 40 in each of the positions. Multiple data points are collected and averaged to minimize the effects of sensor noise and other measurement errors. Acquisition of the pose data during the registration calibration may be automatic. Alternatively, the user can initiate the collection of data using an input device such as a foot pedal. [0098] In one embodiment, the user manually moves the end effector 35 to the various positions while the end effector 35 in the free mode. In another embodiment, the surgical system 10 controls the haptic device 30 to automatically move the end effector 35 to the various positions. In yet another embodiment, the haptic device 30 provides haptic guidance to guide the user in moving the end effector 35 to predefined points in the workspace of the haptic device 30. To improve the accuracy of the registration calibration, the predefined points are preferably located in a vicinity of the surgical site (e.g., close to the actual bone preparation site). The predefined points may include, for example, vertices of a shape, such as a two or three dimensional polytope (e.g., a polygon or polyhedron). In one embodiment, the shape is a cube centered at the relevant anatomy, such as the knee joint. The vertices are preferably displayed on the display device 23 along with an arrow indicating an allowable direction of motion for the end effector 35. One advantage of utilizing haptic guidance to guide the user in moving the end effector 35 to predefined points is that the user is able to move the end effector 35 to a plurality of positions in a repeatable fashion, which improves the accuracy of the registration calibration. [0099] In addition to capturing data relating the pose of the trackers 45 and 47 to the tracking system 40, the surgical system 10 determines a pose of the end effector 35 relative to the haptic device 30 based on data from the position sensors (e.g., joint encoders) in the arm 33. The surgical system 10 uses the data obtained during the registration calibration to calculate the geometric relationship between the haptic device tracker 45 and the coordinate frame of reference of the haptic device 30 (e.g., the coordinate system Χ4 shown in FIG. 54). [0100] In one embodiment, a transformation, 71/, of the haptic device tracker 45 relative to the base 32 of the haptic device 30 is calculated as follows. As the end effector 35 is moved to the various positions, the surgical system 10 records (a) a position of the end effector tracker 47 (e.g., a known position on the end effector 35) relative to the tracking system 40, P£ , which is obtained from the tracking system 40; (b) a position and an orientation of the haptic device tracker 45 relative to the tracking system 40, T* , which is obtained from the tracking system 40; and (c) a position of the end effector tracker 47 relative to the base of the haptic device 30, r, which is obtained from the joint encoders of the haptic device 30. If noise is present in the tracking system output, multiple samples can be taken for each end effector position. In the event the haptic device 30 moves during data sampling, the surgical system 10 can alert the user. Additionally, any affected data points should be thrown out because there will be latency between the data from the tracking system 40 and the data from the joint encoders of the haptic device 30. A position of the end effector tracker 47 relative to the haptic device tracker 45 is computed as bt = , for each test location, /. A position of the end effector tracker 47 relative to the base 32 of the haptic device 30 at each test location, 1, is denoted by η . [0101] After data collection is complete, the transformation of the haptic device tracker 45 relative to the base 32 of the haptic device 30, T‘, is separated into orientation and position terms, T£ = 0 1 . The orientation component R% is found by solving the equation R^b' - η. For this equation, the position error vectors bt and η are computed according to 6, =bt-bm and η = η - rm , where bm = -- and rm = --. A least-squares estimator η η using singular value decomposition is used to solve for R%. The position vector P£ can then be found from the equation P£ = rm - R%bm. The transformation of the haptic device tracker 45 relative to the base 32 of the haptic device 30, Τ/, can then be reconstructed according to Κ pf 0 1 ' [0102] After the registration calibration is complete, the end effector tracker 47 is removed from the haptic device 30. During surgery, the surgical system 10 can determine a pose of the tool 50 based on (a) a known geometric relationship between the tool 50 and the end effector 35, (b) a pose of the end effector 35 relative to the haptic device 30 (e.g., from the position sensors in the arm 33), (c) the geometric relationship between the haptic device 30 and the haptic device tracker 45 determined during the registration calibration, and (d) the global or gross position of the haptic device 30 (e.g., from the pose of the haptic device tracker 45 relative to the tracking system 40). The registration calibration need not be performed if the haptic device tracker 45 has not moved with respect to the haptic device 30 since the previous registration calibration and the previously acquired registration calibration data is still reliable. [0103] In one embodiment, a method for performing the registration calibration includes (a) acquiring first data including at least one of a position and an orientation of a first object disposed on the haptic device 30 at a first location; (b) acquiring second data including at least one of a position and an orientation of a second object disposed on the haptic device 30 at a second location; (c) determining third data including at least one of a position and an orientation of the first object relative to the second location; and (d) determining at least one of a position and an orientation of the second object relative to the second location based at least in part on the first data, the second data, and the third data. The method may also include (℮) moving the first object (e.g., the end effector tracker 47 disposed on the arm 33 of the haptic device 30) to a plurality of positions; (f) providing haptic guidance (e.g., force feedback) to guide the user in moving the first object to at least one of the plurality of positions; (g) acquiring the first data or the second data when the first object is in each of the plurality of positions; and (h) alerting the user if the first object, the second object, the first location, and/or the second location moves during acquisition of the first data, the second data, and/or the third data. [0104] In one embodiment, the first object is the end effector tracker 47, and the second object is the haptic device tracker 45. In this embodiment, the steps of acquiring the first data and the second data include detecting the trackers 45 and 47 with the detection device 41. Alternatively, the second object may comprise one or more components of the tracking system 40, such as the detection device 41. As described above in connection with the end effector tracker 47, the end effector tracker 47 may be disposed at a location (e.g., the first location) on the haptic device 30 that includes a locating feature, such as a cylindrical feature of the tool 50 or the tool holder 51. In this case, the step of acquiring the first data may include determining a position and/or an orientation of a point and/or an axis of the cylindrical feature (e.g., the axis Η-Η shown in FIG. 3Β or any point thereon). As described above in connection with the haptic device tracker 45, the haptic device tracker 45 (or the detection device 41) may be disposed at a location (e.g., the second location) on the haptic device 30, such as the base 32 (e.g., via the arm 34) on which the proximal end of the arm 33 is disposed. Alternatively, the haptic device tracker 45 (or the end effector tracker 47) may be located on an intermediate portion of the arm 33. During the haptic device registration calibration, the position and/or the orientation of the first object and the second object are fixed relative to the first and second locations, respectively. Fixation may be accomplished, for example, by clamping the end effector tracker 47 to the end effector 35 with the clamp 1500 and by fixing the position of the arm 34 on which the haptic device tracker 47 (or the detection device 41) is mounted. To determine the position and orientation of the first object relative to the second location (i.e., the third data), the surgical system 10 determines a configuration of the arm 33, for example, based on data from the joint encoders. [0105] After the haptic device 30 is initialized, the surgeon cm register the patient and the surgical tool 50 to a representation of the anatomy (such as a CT image) and perform a surgical procedure, such as preparing a bone to receive an implant based on a surgical plan. Registration, implant planning, and surgical navigation may be accomplished, for example, as described in the above-referenced Pub. No. US 2006/0142657. Throughout the surgical procedure, the surgical system 10 monitors a position of the bone to detect movement of the bone and makes corresponding adjustments to programs running on the computer 21 and/or the computer 31. For example, the surgical system 10 can adjust a representation (or image) of the bone in response to detected movement of the bone. Similarly, the surgical system 10 can adjust a representation (or image) of the surgical tool 50 in response to detected movement of the surgical tool 50. Thus, images of the bone and the surgical tool on the display device 23 move dynamically in real-time as the bone and the surgical tool 50 move in physical space. The surgical system 10 can also adjust a virtual object associated with the bone in response to detected movement of the bone. For example, the virtual object may define a virtual cutting boundary corresponding to a shape of a surface of the implant. As the bone moves, the surgical system 10 adjusts the virtual object so that the virtual cutting boundary moves in correspondence with the physical bone. In this manner, the surgeon can make accurate bone cuts even when the bone is moving. Additionally, adjustment of the images and the haptic object are transparent to the surgeon so that the surgeon’s operation of the haptic device 30 is not interrupted during the surgical procedure. [0106] To improve the safety of the surgical system 10, the surgical system 10 may include a safety feature adapted to constrain the user’s operation of the tool 50 when an unsafe condition exists. For example, if an unsafe condition is detected, the surgical system 10 may issue a fault signal. A fault condition may exist if there is a system problem (e.g., a problem with the hardware or software), if an occlusion detection algorithm (e.g., as described below) detects an occluded condition, if a tracked object is moving too fast for the tracking system to process (e.g., when the patient’s leg or the haptic device tracker 45 suddenly drops), when the tracking data is questionable, when the user is pushing too hard on the interface 37, and/or if the tool 50 is in an undesirable location. In one embodiment, the surgical system 10 is programmed to issue a fault if a relationship between the anatomy and a position, an orientation, a velocity, and/or an acceleration of the tool 50 does not correspond to a desired relationship and/or if the detection device 41 is unable to detect the position of the anatomy or the position of the surgical tool 51. In response to the fault signal, the surgical system 10 may impose a constraint on the haptic device 30. The constraint may include, for example, providing haptic guidance to the user (e.g., to prevent the user from moving the tool 50 in an unsafe manner) or changing the mode of the haptic device 30 (e.g., from a haptic mode to a free mode). In the preferred embodiment, the constraint is applied to the interface 37, which is both manipulated by the user and is proximal to the surgical site. For a teleoperated haptic device, which includes a “master” device that is operated by the surgeon and is typically remote from the surgical site and a “slave” device that holds the surgical tool proximal to the lurgical site and is controlled by the master device, the constraint may be applied to the naster device, the slave device, or both. 0107] In one embodiment, a fault signal may be issued if the haptic rendering algorithm letermines that a penetration depth of the tool 50 into a haptic boundary exceeds a redetermined threshold. The predetermined threshold may be, for example, a penetration iepth in a range of about 1 mm to about 1.25 mm. In one embodiment, the haptic rendering ilgorithm determines whether the predetermined threshold is exceeded based on the haptic vrench (i.e., force and/or torque) being applied by the haptic device 30 to the user. For ïxample, the haptic rendering algorithm may include a linear force versus position curve vhere the haptic force is set to about 20,000 N/m (or 20 N/mm). Thus, if the user moves the :ip of the tool 50 to a penetration depth of 1 mm, the haptic device 30 outputs a haptic force jf about 20 Ν. Similarly, if the user moves the tip of the tool 50 to a penetration depth of ℓ.25 mm, the haptic device 30 outputs a haptic force of about 25 Ν. In this embodiment, the fault signal is triggered when the haptic force reaches about 22.5 Ν, which corresponds to a penetration depth of about 1.125 mm. Additionally, a threshold haptic force value can be used to protect against the haptic device 30 generating excessively high forces. For example, iaptic objects can be designed as independent primitives (e.g., simple geometric shapes) and combined during haptic rendering. If the cumulative effect of the primitives is undesirable [e.g., the total haptic force is too high), a fault signal can be issued. #108] In another embodiment, a fault signal may issue if rapid motion of the anatomy is detected as indicated, for example, by a velocity of the anatomy trackers 43a and 43b. Rapid motion may be caused, for example, when the anatomy shifts or a tracking element or the detection device 41 is bumped. In one embodiment, the fault signal issues if a velocity of the anatomy tracker 43a is greater than about 40 mm/s or a velocity of the anatomy tracker 43b is greater than about 26 mm/s. The indication of rapid motion may also be based on position [as opposed to velocity) such as when a position of the anatomy tracker 43a or 43b abruptly changes significantly. An abrupt change may be indicated, for example, if a change from the last known good position reported by the tracking system 40 to the current position reported by the tracking system 40 is greater than a predetermined threshold. In addition to rapid motion of the anatomy, the fault signal may issue if rapid motion of the haptic device tracker 45 is detected, such as when the haptic device tracker 45 has a high velocity or an abrupt change in position, which may indicate that the tracker 45 has been bumped or is not securely secured to the arm 34. [0109] The surgical system 10 may have different levels or stages of faults. For example, in one embodiment, there are three stages of faults. The first fault stage applies when the tip of the tool 50 penetrates too deeply into or beyond a haptic boundary. The second fault stage applies when rapid motion of the anatomy is detected. The third fault stage applies when a system fault is present. The surgical system 10 responds to the fault stages by imposing a constraint on the haptic device 30. For example, the surgical system 10 may respond to the first fault stage by disabling the tool 50. The surgical system 10 may respond to the second fault stage by disabling both the tool 50 and the haptic guidance. Disabling the haptic guidance when rapid motion of the anatomy is detected (e.g., when the patient’s leg slips off the operating table) advantageously prevents the virtual haptic surfaces that define the haptic cutting volume from moving with the falling bone and dragging the tool 50 along. In contrast, if the haptic surfaces are not disabled when the bone moves rapidly, the haptic surfaces will follow the bone and the haptic device 30 will exert a large force on the arm 33 to maintain the tool 50 within the falling haptic volume. As a result, the arm 33 will be dragged downward as the bone falls. Disabling the haptic guidance avoids this dangerous situation. The surgical system 10 may respond to the third fault stage by disabling the tool 50, shutting off power to the arm 33, and locking the brakes of the arm 33. In one embodiment, the surgical system 10 responds to a fault signal by disabling the tool 50 and placing the haptic device 30 in the free mode (rather than applying the brakes) so that the arm 33 does not pull or apply stress to the anatomy. In this manner, the surgical system 10 avoids damaging the anatomy by preventing the user from operating the tool 50 and/or the arm 33 when an unsafe condition exists. [0110] In one embodiment, a safety feature of the surgical system 10 includes a tool disabling feature. For example, if the tool 50 is an electric tool, the surgical system 10 may include a relay disposed along an electrical connection between the tool 50 and a user input device for controlling the tool 50. For example, the relay may be located between a foot pedal and a tool control console (e.g., the ANSPACH® foot pedal and console described above in connection with the tool 50). Alternatively, the relay could be disposed along a control cable for a handheld instrument. In the case of a pneumatic tool, a pneumatic shutoff valve may be disposed in an air connection between the user input device and the tool motor. In lieu of a relay, the surgical system 10 could supply a digital or analog signal to a “disable input” port on the tool control console. In one embodiment, the surgical system 10 includes a relay that is closed under normal operating conditions so that the tool 50 is activated when the user depresses the foot pedal. If a fault condition is detected, the surgical system 10 issues a fault signal and commands the relay to open so that the tool 50 cannot be activated even when the user depresses the foot pedal. In another embodiment, the relay is a “normally open” relay so that the tool 50 will be remain shut off or disabled unless the tool 50 is specifically enabled by the surgical system 10. One advantage of a “normally open” relay is that if the haptic device 30 completely shuts down, the tool 50 will be disabled. Alternatively or in addition to disabling the tool 50 by commanding a relay or shut off valve, a fault condition may trigger the surgical system 10 to disable the tool 50 by commanding a power shutoff to the console or to the power supplies or amplifiers that drive the tool 50. [0111] In one embodiment, a method of controlling the haptic device 30 based on the tool disabling features includes (a) enabling operation of the haptic device 30; (b) manipulating the haptic device 30 to perform a procedure on a patient; (c) determining whether a relationship between the anatomy of the patient and a position, an orientation, a velocity, and/or an acceleration of the tool 50 of the haptic device 30 corresponds to a desired relationship; and (d) issuing a fault signal and/or imposing a constraint on the haptic device 30 if the relationship does not correspond to the desired relationship or if the detection device 41 is unable to detect the anatomy or the tool 50. The relationship may be based, for example, on a desired interaction between the anatomy and the tool 50. In one embodiment, the relationship is defined by a virtual object positioned relative to the anatomy and representing a desired location of an implant and/or cut surfaces for installing the implant. The method may further include implementing control parameters for controlling the haptic device 30 to provide at least one of haptic guidance to the user and a limit on user manipulation of the surgical device based on the relationship. In one embodiment, in response to the fault signal, the surgical system 10 disables operation of the haptic device 30, locks a portion of the haptic device 30 in position, and/or places the haptic device 10 in a safety mode. In the safety mode, operation of and/or manipulation of the haptic device 30 may be impeded or constrained. To determine whether the relationship corresponds to the desired relationship, the surgical system 10 may, for example, determine whether a penetration depth of the tool 50 into a virtual boundary associated with the anatomy exceeds a desired penetration depth, determine whether the haptic device 30 has violated an operational constraint (e.g., a parameter generated by the haptic rendering algorithm), and/or determine whether the detection device 41 is able to detect a position of the anatomy and/or a position of the tool 50. [0112] In another embodiment, a safety feature of the surgical system 10 includes an occlusion detection algorithm adapted to mitigate risk during a cutting operation in the event tracking elements (e.g., the trackers 43a, 43b, 45) associated with the haptic device 30 and/or the anatomy become occluded. An occluded state may exist, for example, when the detection device 41 is unable to detect a tracking element (e.g., when a person or object is interposed between the tracking element and the detection device 41), when a lens of the detection device 41 is occluded (e.g., by dust), and/or when reflectivity of markers on a tracking element is degraded (e.g., by blood, tissue, dust, bone debris, etc.). If an occluded state is detected, the occlusion detection algorithm alerts the user, for example, by causing a warning message to be displayed on the display device 23, an audible alarm to sound, and/or the generation of tactile feedback (e.g., vibration). The occlusion detection algorithm may also issue a control signal, such as a command to the surgical system 10 to shut off power to or otherwise disable the tool 50 or to impose a constraint on the haptic device 30 (e.g., providing haptic guidance, changing a mode of the haptic device 30, etc.). In this manner, the occlusion detection algorithm prevents the tool 50 from damaging the anatomy when the tracking system 40 is not able to accurately determine relative positions of the tool 50 and the anatomy. [0113] In one embodiment, the occlusion detection algorithm considers a position of the tool 50 relative to a haptic boundary. In this embodiment, if the occlusion detection algorithm detects an occluded state, the surgical system 10 determines whether the tool 50 is touching a haptic boundary of a haptic object. If the tool 50 is not in contact with a haptic boundary at the time of an occlusion event, the occlusion detection algorithm disables the tool 50 and places the haptic device 30 in the free mode so that the tool 50 will move with the patient and, if necessary, can be withdrawn from the patient. When the occluded state ends (e.g., when all occluded trackers become visible), the surgical system 10 places the haptic device 30 in the approach mode so that the user may resume the procedure. In this manner, the occlusion detection algorithm permits the haptic boundary to be deactivated if the user isn’t pushing against the haptic wall at the time of the occlusion event. In contrast, if the surgical system 10 determines that the tool 50 is touching the haptic boundary and/or exceeding the haptic boundary at the time of the occlusion event, the occlusion detection algorithm waits for a predetermined period of time (e.g., 1 second) to see if the occluded tracker(s) become visible. During this time, the tool 50 is disabled, and the user is alerted that the tracker(s) are occluded (e.g., via a visual, audible, or tactile signal). If the haptic device tracker 45 and the anatomy trackers 43a and 43b all become visible within the predetermined period of time, the haptic (or burring) mode is resumed. Otherwise, the haptic device 30 is placed in the free mode so that the tool 50 will move with the patient and, if necessary, can be withdrawn from the patient. As before, when the occluded state ends (e.g., when all occluded trackers again become visible), the surgical system 10 places the haptic device 30 in the approach mode so that the user may resume the procedure. One advantage of utilizing the predetermined period of time (or time interval) is that the occlusion detection algorithm allows the haptic wall to remain active during momentary occlusion events. Additionally, sudden removal of the haptic walls, which might result in sudden motion from the surgeon during cutting, is avoided. Additionally, if the occluded condition ceases to exist within the predetermined period of time, the low pass filter utilized for dynamic tracking (motion compensation) is reset to prevent the tracking system 40 from perceiving small motions as discontinuous motion. [0114] FIG. 14 shows a diagram of an embodiment of an occlusion detection algorithm. In step S3500, the haptic device 30 is in the haptic (or burring) mode. In step S3502, the algorithm determines whether the haptic device tracker 45 and the relevant anatomy tracker are both visible (i.e., not occluded) to the detection device 41. The relevant anatomy tracker is the anatomy tracker associated with the bone of interest. Thus, for a knee replacement procedure, if the surgeon is preparing the femur F, the relevant anatomy tracker is the anatomy tracker 43a. Similarly, if the surgeon is preparing the tibia Τ, the relevant anatomy tracker is the anatomy tracker 43b. Although additional anatomy trackers may also be monitored, the occlusion detection algorithm preferably monitors only the relevant anatomy tracker to avoid unnecessary false triggers (e.g., triggers based on occlusion of trackers associated with portions of the anatomy other than the bone of interest). If both the haptic device tracker 45 and the relevant anatomy tracker are visible, the algorithm proceeds to step S3504 and enables the surgical tool 50. The surgical tool 50 may be enabled, for example, by providing power to the tool 50 so that the tool 50 can be activated by the user, such as by depressing a foot pedal. As shown in the loop of FIG. 14 (steps S3500, S3502, and S3504), as long as both trackers are visible, the haptic device 30 continues in the haptic mode with the surgical tool 50 enabled. [0115] In contrast, if the detection device 41 in step S3502 is unable to detect the haptic device tracker 45 and/or the relevant anatomy tracker, the algorithm concludes that at least one of the trackers is occluded and proceeds to step S3506. The surgical tool 50 may be disabled, for example, by shutting off power to the tool 50 so that the tool 50 cannot be activated by the user even if the user attempts to activate the tool 50, such as by depressing a foot pedal. After the tool 50 is disabled, the algorithm the proceeds to step S3508 and provides an indication to the user that an occluded state exists. The indication may be any suitable signal, such as a visual signal on the display device 23, an audible signal (e.g., a beep, alarm, or other warning sound), a tactile signal (e.g., vibration), and/or a control signal (e.g., a control signal that commands the haptic device 30 to lock the arm 33 in position). In step S3 510, the algorithm determines whether a haptic force is detected. A haptic force is detected, for example, when the haptic device 30 is providing force feedback to the user (e.g., haptic guidance and/or a limit on user manipulation of the arm 33). If a haptic force is not detected in step S3510, the algorithm proceeds to step S3518, deactivates the haptic mode, and enables the free mode. When the haptic device 30 is in the free mode, the tool 50 will move with the patient and, if necessary, can be withdrawn from the patient. When the occluded state ends, the surgical system 10 places the haptic device 30 in the approach mode so that the surgeon may resume the procedure. [0116] In contrast, if a haptic force is detected, the algorithm proceeds to step S3512 and maintains the haptic device 30 in the haptic mode. In step S3514, the algorithm determines whether the haptic device tracker 45 and/or the relevant anatomy tracker is still occluded. If the trackers are not occluded, the algorithm returns to step S3500 where the haptic device 30 is maintained in the haptic mode 30 so that the surgeon may continue the procedure. In contrast, if at least one of the trackers is still occluded, the algorithm proceeds to step S3516 and determines whether a time t has elapsed since the occluded state was detected. The time t may be chosen based on the application. In one embodiment, the time t is about 1 second. If the time t has not elapsed, the algorithm returns to step S3514. If the time t has elapsed, the algorithm proceeds to step S3518, deactivates the haptic mode, and enables the free mode. When the haptic device 30 is in the free mode, the tool 50 will move with the patient and, if necessary, can be withdrawn from the patient. When the occluded state ends, the surgical system 10 places the haptic device 30 in the approach mode so that the surgeon may resume the procedure. In this manner, the occlusion detection algorithm advantageously limits the user’s ability to activate the tool 50 when the surgical system 10 is not able to determine the relative positions of the haptic device 30 and the anatomy. As a result, the risk of damaging the anatomy is mitigated. [0117] Another embodiment of the occlusion detection algorithm includes a method for controlling the haptic device 30 comprising the following steps: (a) detecting with the detection device 41 a first object comprising at least one of the anatomy and a tracking element associated with the anatomy; (b) detecting with the detection device 41 a second object comprising at least one of the haptic device 30 and a tracking element associated with the haptic device 30; and (c) providing an indication to the user if the detection device 41 is unable to detect the first object and/or the second object. The indication may be, for example, a signal, such as a visual, an audible, a tactile, and/or a control signal, or may be provided by disabling at least a portion of the haptic device 30, such as the tool 50. In one embodiment, the method includes imposing a constraint on the haptic device 30, such as limiting movement of at least a portion of the haptic device 30 (e.g., the arm 33, the tool 50) or limiting operation of the haptic device 30 (e.g., shutting off power to or otherwise disabling the tool 50, changing a mode of the haptic device, etc.). The constraint is preferably removed after a predetermined time interval (e.g., 1 second as discussed above in connection with step S3516 of FIG. 55). The method may also include enabling the haptic device 30 only if the detection device 41 is able to detect both the first object and the second object. [0118] In one embodiment, the occlusion detection algorithm determines whether the haptic device 30 is providing haptic guidance to the user and/or a limit on user manipulation of the haptic device 30. The haptic guidance and/or the limit on user manipulation may be based, for example, on a virtual boundary associated with the anatomy. If haptic guidance and/or a limit on user manipulation is being provided, the haptic guidance and/or the limit on user manipulation is preferably maintained to avoid damage to the anatomy (e.g., damage caused by sudden removal of the virtual boundary or haptic wall when the user is pushing against the virtual boundary with the tool 50). Accordingly, the virtual boundary is preferably maintained if a portion of the haptic device 30 (e.g., the tip of the tool 50) is proximate to, in contact with, or exceeding the virtual boundary. The method may also include deactivating the virtual boundary if the portion of the haptic device 30 is not interacting with the virtual boundary (e.g., if the tool 50 is not in contact with the virtual boundary or haptic wall). In this situation, because the user is not pushing against the virtual boundary with the tool 50, the tool 50 is not likely to damage the anatomy if the virtual boundary is suddenly removed. As a result, the risk of damaging the anatomy is reduced. [0119] Thus, embodiments of the present invention provide a surgical system that is able to cooperatively interact with a surgeon to enable the surgeon to sculpt complex shapes in bone in a minimally invasive manner and that has the ability to dynamically compensate for motion of objects in the intraoperative environment in a manner that safeguards the patient and is substantially transparent to the surgeon. 1. A system for controlling a surgical device, comprising:a surgical device configured to be manipulated by a user to perform a procedure on patient;a surgical tool coupled to the surgical device; anda computing system programmed to:determine whether a relationship between an anatomy of the patient and at least one of a position, an orientation, a velocity, and an acceleration of the surgical tool corresponds to a desired relationship between the anatomy and the at least one of the position, the orientation, the velocity, and the acceleration of the surgical tool,detect with a detection device a first object comprising at least one of the anatomy and a tracking element associated with the anatomy;impose a constraint on the surgical device if at least one of the relationship does not correspond to the desired relationship and the detection device is unable to detect at least one of a position of the anatomy and the position of the surgical tool;andprovide an indication to a user if the detection device is unable to detect the first object. 2. The system of claim 1, wherein the desired relationship is defined by at least one parameter generated by a haptic rendering algorithm. 3. The system of claim 1, wherein the computing system is further programmed to:22487867.1determine whether a penetration depth of the surgical tool into a virtual boundary associated with the anatomy exceeds a predetermined threshold. 4. The system of claim 1, wherein the computing system is further programmed to:determine at least one of whether a position of at least one of the anatomy, a tracked object, and a second tracking element disposed on the tracked object is outside a predetermined boundary and whether an output force of the surgical device exceeds a predetermined threshold. 5. The system of claim 1, wherein the computing system is further programmed to:determine whether the surgical tool is interacting with a virtual boundary associated with the anatomy; anddeactivate the virtual boundary if the surgical tool is not interacting with the virtual boundary. 6. The system of claim 1, wherein the computing system is further programmed to:determine whether the surgical tool is interacting with a virtual boundary associated with the anatomy; andmaintain the virtual boundary if the surgical tool is at least one of contacting and exceeding the virtual boundary. 7. The system of claim 1, wherein the computing system is further programmed to:remove the imposed constraint after a predetermined time interval.Μ 8. The system of claim 1, wherein the computing system is further programmed to:detect with the detection device a second object comprising at least one of the surgical device and a second tracking element associated with the surgical device;provide a second indication to the user if the detection device is unable to detect the second object; andenable the surgical device only if the detection device detects the first object and the second object.22487867.1